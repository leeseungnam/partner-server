<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.wrightbrothers.apps.user.query.User">
	<select id="checkAuth" parameterType="kr.wrightbrothers.apps.user.dto.UserAuthDto" resultType="boolean">
		select if(count(*) = 0, false, true) as isAuth
		from users u
		inner join users_partner up
		   on u.user_id = up.user_id
		   and up.partner_code = #{partnerCode}
		   and up.auth_code = #{authCode}
		   and up.user_id = #{userId}
		inner join partner p
		   on up.partner_code = p.partner_code
		   and p.partner_status = #{partnerStatus}
		   and p.partner_kind = #{partnerKind}
		inner join partner_contract pc
		   on p.partner_code = pc.partner_code
		   and pc.contract_status = #{contractStatus}
	</select>

	<select id="findUserByDynamic" parameterType="kr.wrightbrothers.apps.user.dto.UserDto" resultType="kr.wrightbrothers.apps.user.dto.UserDto">
		select
		    user_id
		,	user_pwd
		,	user_name
		,	change_pwd_flag
		  from users
		 where 1=1
	    <if test="userId != null and userId != ''">
		   and user_id = #{userId}
	    </if>
		<if test="userName != null and userName != ''">
		   and user_name = #{userName}
		</if>
		<if test="userPhone != null and userPhone != ''">
		   and user_phone = #{userPhone}
		</if>
	</select>

	<update id="updateUserPwd" parameterType="kr.wrightbrothers.apps.user.dto.UserPwdUpdateDto">
		update users
			set
			user_pwd = #{userPwd}
		,	change_pwd_flag = #{changePwdFlag}
		,	update_date = current_timestamp
		where user_id = #{userId}
	</update>



	<select id="findAuthById" parameterType="java.lang.String" resultType="kr.wrightbrothers.apps.user.dto.UserAuthDto">
		select
			role.auth_code as auth_code,
			role.partner_code as partner_code
		from users user
		inner join users_partner role
		on role.user_id = user.user_id
		where user.user_id = #{userId}
	</select>

	<select id="findUserByPartnerCodeAndAuthCode" parameterType="kr.wrightbrothers.apps.partner.dto.PartnerViewDto$Param" resultType="kr.wrightbrothers.apps.partner.dto.PartnerOperatorDto$ResBody">
		select
		       u.user_id
		     , u.user_name
			 , up.auth_code
			 , up.partner_code
		from users_partner up
				 inner join  users u
							 on up.user_id = u.user_id
		where up.partner_code = #{partnerCode}
		  and up.auth_code = #{authCode}
	</select>

	<insert id="insertUser" parameterType="kr.wrightbrothers.apps.user.dto.UserInsertDto">
		insert into users
			(user_id
			, user_pwd
			, user_name
			, user_phone
			, user_status_code
			, terms_agreed_flag
			, collection_agreed_flag
			, promotion_agreed_flag
			, login_fail_count
			, create_user_id
			, update_user_id
			)
		values
			(#{userId}
			, #{userPwd}
			, #{userName}
			, #{userPhone}
			, #{userStatusCode}
			, #{termsAgreedFlag}
			, #{collectionAgreedFlag}
			, #{promotionAgreedFlag}
			, 0
			, #{userId}
			, #{userId}
			)
	</insert>

	<insert id="insertUsersPartner" parameterType="kr.wrightbrothers.apps.user.dto.UserAuthInsertDto$ReqBody">
		insert into users_partner
			(user_id
			, partner_code
			, auth_code
			, create_user_id
			, update_user_id
			)
		values
			(#{userId}
			, #{partnerCode}
			, #{authCode}
			, #{userId}
			, #{userId}
			)
	</insert>
</mapper>
