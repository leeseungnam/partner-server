<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.wrightbrothers.apps.order.query.Return">

	<select id="isRequestReturn" parameterType="kr.wrightbrothers.apps.order.dto.RequestReturnUpdateDto" resultType="boolean">
		select
		    if(count(order_no) = 1, true, false) as isRequestReturn
		  from order_info
		 where order_no = #{orderNo}
		   and order_status_code = #{returnProcessCode}
	</select>

	<select id="findReturnList" parameterType="kr.wrightbrothers.apps.order.dto.ReturnListDto$Param" resultType="kr.wrightbrothers.apps.order.dto.ReturnListDto$Response">
		select
		    date_format(g.return_request_date, '%Y-%m-%d') as return_request_day,
		    o.order_no,
			date_format(o.order_date, '%Y-%m-%d') as order_day,
			o.order_user_name,
			g.order_product_status_code,
			g.order_product_status_code as order_product_status_name,
			o.order_status_code,
			o.order_status_code as order_status_name,
			p.payment_method_code,
			p.payment_method_code as payment_method_name,
			o.order_name,
			g.product_name,
			g.return_reason,
			p.order_amount,
			g.final_sell_amount,
			p.ssp_point,
			p.sales_amount,
			date_format(p.cancel_date, '%Y-%m-%d') as cancel_day,
			p.payment_status_code,
			p.payment_status_code as payment_status_name
		  from order_info o
		 inner join order_payment p
			on o.order_no = p.order_no
		 inner join order_product g
			on o.order_no = g.order_no
		 where o.partner_code = #{partnerCode}
		<choose>
			<when test="keywordValue != null and keywordValue != ''">
				<choose>
					<when test="keywordType == 'NO'">
						<foreach collection="keywordValueList" item="item" index="index" open="and (" separator="OR" close=")">
							o.order_no like #{item} '%'
						</foreach>
					</when>
					<when test="keywordType == 'NAME'">
						<foreach collection="keywordValueList" item="item" index="index" open="and (" separator="OR" close=")">
							o.order_name like #{item} '%'
						</foreach>
					</when>
					<when test="keywordType == 'USER'">
						<foreach collection="keywordValueList" item="item" index="index" open="and (" separator="OR" close=")">
							o.order_user_name like #{item} '%'
						</foreach>
					</when>
				</choose>
		 		order by g.return_request_date desc
			</when>
			<otherwise>
				<choose>
					<when test="rangeType == 'PAYMENT'.toString()">
						and p.payment_date between concat(#{startDay}, ' 00:00:00.0') and concat(#{endDay}, ' 23:59:59.9')
						order by p.payment_date desc
		 			</when>
					<when test="rangeType == 'CANCEL'.toString()">
						and p.cancel_date between concat(#{startDay}, ' 00:00:00.0') and concat(#{endDay}, ' 23:59:59.9')
						order by p.cancel_date desc
					</when>
					<when test="rangeType == 'RETURN'.toString()">
						and g.return_request_date between concat(#{startDay}, ' 00:00:00.0') and concat(#{endDay}, ' 23:59:59.9')
						order by g.return_request_date desc
					</when>
				</choose>
			</otherwise>
		</choose>
	</select>

	<update id="updateReturn" parameterType="kr.wrightbrothers.apps.order.dto.ReturnMemoUpdateDto">
		-- 송장번호 입력 유무에 대한 체크
		<selectKey resultType="boolean" keyProperty="isInvoiceNo" order="BEFORE">
			select
			if(count(order_product_seq) = 0, true, false) as isInvoice
			from order_delivery
			where order_no = #{orderNo}
			and invoice_no is not null
		</selectKey>
		update order_info
		   set return_memo = #{returnMemo},
		       -- 송장번호 미입력 시 수령자 정보 변경 가능
		       <if test="isInvoiceNo">
					recipient_name = #{recipientName},
					recipient_phone = #{recipientPhone},
					recipient_address_zip_code = #{recipientAddressZipCode},
					recipient_address = #{recipientAddress},
					recipient_address_detail = #{recipientAddressDetail},
			   </if>
			   update_user_id = #{userId},
			   update_date = now()
		 where order_no = #{orderNo}
	</update>

	<select id="findReturnProductList" parameterType="java.lang.String" resultType="kr.wrightbrothers.apps.order.dto.ReturnProductDto">
		select
		    p.order_product_seq,
		    p.product_code,
		    p.product_name,
		    p.option_name,
		    p.final_sell_amount,
			date_format(p.return_request_date, '%Y-%m-%d') as return_request_day,
			p.product_qty,
			p.order_product_status_code,
			p.order_product_status_code as order_product_status_name,
			d.return_delivery_company_code,
			d.return_delivery_company_name,
			d.return_invoice_no,
			if(p.order_product_status_code = 'R04', p.non_return_reason_name, p.return_reason) as reason
		  from order_product p
		  left join order_delivery d
		  	on p.order_no = d.order_no
		   and p.order_product_seq = d.order_product_seq
		   and p.product_code = d.product_code
		 where p.order_no = #{orderNo}
		   and p.order_product_status_code in ('R02', 'R03', 'R04', 'R05')	-- 반품요청, 반품취소, 반품진행, 반품불가, 반품완료
		 order by p.order_product_seq
	</select>

	<select id="findOrderProductStatusCode" parameterType="kr.wrightbrothers.apps.order.dto.RequestReturnUpdateDto" resultType="java.lang.String">
		select
		    order_product_status_code
		  from order_product
		 where order_no = #{orderNo}
		   and order_product_seq = #{orderProductSeq}
	</select>

	<update id="updateOrderProductReturnCode" parameterType="kr.wrightbrothers.apps.order.dto.RequestReturnUpdateDto">
		update order_product
		   set order_product_status_code = #{returnProcessCode},
		       -- 반풀불가 처리 시 반품 사유 등록
		       <if test="returnProcessCode == 'R04'.toString()">
				   non_return_reason_code = #{requestCode},
				   non_return_reason_name = #{requestName},
			   </if>
		       update_user_id = #{userId},
		       update_date = now()
		 where order_no = #{orderNo}
		   and order_product_seq = #{orderProductSeq}
	</update>

	<update id="updateOrderReturnCode" parameterType="kr.wrightbrothers.apps.order.dto.RequestReturnUpdateDto">
		update order_info
		   set order_status_code = #{returnProcessCode},
		       update_user_id = #{userId},
		       update_date = now()
		 where order_no = #{orderNo}
	</update>

	<select id="findNonCancelOrderProduct" parameterType="java.lang.String" resultType="kr.wrightbrothers.apps.order.dto.DeliveryProductDto">
		select
			p.order_product_seq,
			p.product_code,
			p.product_name,
			p.option_name,
			p.product_qty,
			d.delivery_company_code,
			d.delivery_company_name,
			d.invoice_no,
			d.delivery_status_code,
			d.delivery_status_code as delivery_status_name,
			date_format(d.delivery_start_date, '%Y-%m-%d') as delivery_start_day,
			date_format(d.delivery_end_date, '%Y-%m-%d') as delivery_end_day
		  from order_product p
		  left join order_delivery d
		    on p.order_no = d.order_no
		   and p.order_product_seq = d.order_product_seq
		   and p.product_code = d.product_code
		 where p.order_no = #{orderNo}
		   and p.order_product_status_code not in ('O06', 'O07')
	</select>

	<update id="updateOrderDeliveryReturn" parameterType="kr.wrightbrothers.apps.order.dto.RequestReturnUpdateDto">
		update order_delivery
		   set return_delivery_company_code = #{requestCode},
		       return_delivery_company_name = #{requestName},
		       return_invoice_no			= #{requestValue},
		       return_invoice_no_input_date = ifnull(return_invoice_no_input_date, now()),
		       update_user_id				= #{userId},
		       update_date					= now()
		 where order_no = #{orderNo}
		   and order_product_seq = #{orderProductSeq}
	</update>

</mapper>
