<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.wrightbrothers.apps.order.query.Return">

	<select id="isRequestReturn" parameterType="kr.wrightbrothers.apps.order.dto.RequestReturnUpdateDto" resultType="boolean">
		select
		    if(count(ord_no) = 1, true, false) as isRequestReturn
		  from ord_prnr_info
		 where ord_no = #{orderNo}
		   and prnr_cd = #{partnerCode}
		   and ord_stus = #{returnProcessCode}
	</select>

	<select id="isPayMethodBank" parameterType="java.lang.String" resultType="boolean">
		select
		    if(count(ord_no) > 0, true, false) as isPayMethodBank
		  from ord_info
		 where ord_no = #{orderNo}
		   and pay_meth = 'P03'
	</select>

	<select id="findReturnList" parameterType="kr.wrightbrothers.apps.order.dto.ReturnListDto$Param" resultType="kr.wrightbrothers.apps.order.dto.ReturnListDto$Response">
		select
		    date_format(p.cnc_rq_dt, '%Y-%m-%d') as return_request_day,
		    o.ord_no as order_no,
			date_format(o.ord_dt, '%Y-%m-%d') as order_day,
			m.usr_nm as order_user_name,
			s.ord_stus as return_status_code,
			s.ord_stus as return_status_name,
			o.pay_meth as payment_method_code,
			o.pay_meth as payment_method_name,
			s.ord_nm as order_name,
			p.prdt_nm as product_name,
			if(p.cnc_rsn is not null and p.cnc_rsn != '', p.cnc_rsn, c.intg_cd_val_nm) as return_reason,
			s.ord_amt as order_amount,
			p.fnl_sell_amt as final_sell_amount,
			if(p.ord_prdt_stus in ('R05', 'R06'), p.rtn_chg, null) as return_delivery_charge_amount
		  from ord_prnr_info s
		 inner join ord_info o
		    on o.ord_no = s.ord_no
		 inner join ord_prdt_info p
			on s.ord_no = p.ord_no
		   and s.prnr_cd = p.prnr_cd
		  left join prdt_dlvr_dtl d
		    on p.prdt_cd = d.prdt_cd
		  left join com_mbr_info m
		    on o.ord_usr_id = m.usr_id
		  left join com_intg_cd_dtl c
			on p.cnc_rsn_cd = c.intg_cd_val
		   and c.intg_cd_id = '000074'
		 where s.prnr_cd = #{partnerCode}
		<choose>
			<when test="keywordValue != null and keywordValue != ''">
		   and p.ord_prdt_stus in ('R01', 'R03', 'R06', 'R05', 'R04')
				<choose>
					<when test="keywordType == 'NO'">
						<foreach collection="keywordValueList" item="item" index="index" open="and (" separator="OR" close=")">
							s.ord_no like concat(trim(#{item}), '%')
						</foreach>
					</when>
					<when test="keywordType == 'NAME'">
						<foreach collection="keywordValueList" item="item" index="index" open="and (" separator="OR" close=")">
							s.ord_nm like concat(trim(#{item}), '%')
						</foreach>
					</when>
					<when test="keywordType == 'USER'">
						<foreach collection="keywordValueList" item="item" index="index" open="and (" separator="OR" close=")">
							m.usr_nm like concat(trim(#{item}), '%')
						</foreach>
					</when>
				</choose>
		 		order by p.cnc_rq_dt desc
			</when>
			<otherwise>
				<foreach collection="returnStatus" item="item" index="index" open="and p.ord_prdt_stus in (" separator="," close=")">
					#{item}
				</foreach>
				<choose>
					<when test="rangeType == 'PAYMENT'.toString()">
						and o.pym_dt between concat(#{startDay}, ' 00:00:00.0') and concat(#{endDay}, ' 23:59:59.9')
						order by o.pym_dt desc
		 			</when>
					<when test="rangeType == 'RETURN'.toString()">
						and p.cnc_rq_dt between concat(#{startDay}, ' 00:00:00.0') and concat(#{endDay}, ' 23:59:59.9')
						order by p.cnc_rq_dt desc
					</when>
				</choose>
			</otherwise>
		</choose>
	</select>

	<select id="findOrderProductStatus" parameterType="kr.wrightbrothers.apps.order.dto.ReturnDeliveryDto$ReqBody" resultType="java.lang.String">
		select
		    ord_prdt_stus
		  from ord_prdt_info
		 where ord_no = #{orderNo}
		   and prnr_cd = #{partnerCode}
		   and ord_prdt_idx = #{orderProductSeq}
	</select>

	<update id="updateReturnMemo" parameterType="kr.wrightbrothers.apps.order.dto.ReturnMemoUpdateDto">
		update ord_prnr_info
		   set rtrn_memo = #{returnMemo},
			   upd_usr_id = #{userId},
			   upd_dt = now()
		 where ord_no = #{orderNo}
		   and prnr_cd = #{partnerCode}
	</update>

	<select id="findReturnProductList" parameterType="kr.wrightbrothers.apps.order.dto.ReturnFindDto$Param" resultType="kr.wrightbrothers.apps.order.dto.ReturnProductDto">
		select
					 p.ord_prdt_idx order_product_seq,
					 p.prdt_cd product_code,
					 p.prdt_nm product_name,
					 if(p.optn_nm is null, '', concat(p.optn_nm, '-', p.optn_val)) option_name,
					 p.fnl_sell_amt final_sell_amount,
					 date_format(p.cnc_rq_dt, '%Y-%m-%d') return_request_day,
					 date_format(p.cnc_cplt_dt, '%Y-%m-%d') return_complete_day,
					 p.prdt_qty product_qty,
					 p.ord_prdt_stus order_product_status_code,
					 p.ord_prdt_stus order_product_status_name,
					 d.rtrn_dlvry_cmpny return_delivery_company_code,
					 cd.intg_cd_val_nm return_delivery_company_name,
					 d.rtrn_invc_no return_invoice_no,
					 if(p.cnc_rsn is not null and p.cnc_rsn != '' , p.cnc_rsn, c.intg_cd_val_nm) return_reason,
					 rcd.intg_cd_val_nm non_return_reason,
					 if(p.cnc_pay_amt is not null, p.rtn_chg, null) return_delivery_amount,
					 if(p.cnc_pay_amt is not null, p.cnc_pay_amt, null) refund_amount
			  from ord_prdt_info p
			      	   inner join ord_prnr_info s
			      		on p.ord_no = s.ord_no
			           and p.prnr_cd = s.prnr_cd
					   left join ord_shpn_info d
								 on p.ord_no = d.ord_no
									 and p.ord_prdt_idx = d.ord_prdt_idx
									 and p.prdt_cd = d.prdt_cd
					   left join com_intg_cd_dtl cd
								 on d.rtrn_dlvry_cmpny = cd.intg_cd_val
									 and cd.intg_cd_id = '000044'
					   left join com_intg_cd_dtl c
								 on p.cnc_rsn_cd = c.intg_cd_val
									 and c.intg_cd_id = '000074'
					   left join com_intg_cd_dtl rcd
								 on p.non_rtn_tp_cd = rcd.intg_cd_val
									 and rcd.intg_cd_id = '000085'
			  where p.ord_no = #{orderNo}
				and p.prnr_cd = #{partnerCode}
				and p.ord_prdt_stus in ('R01', 'R03', 'R04', 'R05', 'R06') -- 반품요청, 반품진행, 반품불가, 반품완료, 반품완료 요청
			  order by p.ord_prdt_idx
	</select>

	<select id="findOrderProductStatusCode" parameterType="kr.wrightbrothers.apps.order.dto.RequestReturnUpdateDto" resultType="java.lang.String">
		select
		    ord_prdt_stus as order_product_status_code
		  from ord_prdt_info order_product
		 where ord_no = #{orderNo}
		   and prnr_cd = #{partnerCode}
		   and ord_prdt_idx = #{orderProductSeq}
	</select>

	<select id="findNonCancelOrderProduct" parameterType="kr.wrightbrothers.apps.order.dto.ReturnFindDto$Param" resultType="kr.wrightbrothers.apps.order.dto.DeliveryProductDto">
		select
			p.ord_prdt_idx as order_product_seq,
			p.prdt_cd as product_code,
			p.prdt_nm as product_name,
			p.optn_nm as option_name,
			p.prdt_qty as product_qty,
			cd.intg_cd_val as delivery_company_code,
			cd.intg_cd_val_nm as delivery_company_name,
			d.invc_no as invoice_no,
			d.ord_dlvr_stus as delivery_status_code,
			d.ord_dlvr_stus as delivery_status_name,
			date_format(d.dlvry_st_dt, '%Y-%m-%d') as delivery_start_day,
			date_format(d.dlvry_end_dt, '%Y-%m-%d') as delivery_end_day
		  from ord_prdt_info p
		  left join ord_shpn_info d
		    on p.ord_no = d.ord_no
		   and p.ord_prdt_idx = d.ord_prdt_idx
		   and p.prdt_cd = d.prdt_cd
		  left join com_intg_cd_dtl cd
		    on d.dlvry_cmpny = cd.intg_cd_val
		   and cd.intg_cd_id = '000044'
		 where p.ord_no = #{orderNo}
		   and p.prnr_cd = #{partnerCode}
		   and p.ord_prdt_stus not in ('O06', 'O07')
	</select>

	<update id="updateApprovalReturn" parameterType="kr.wrightbrothers.apps.order.dto.RequestReturnUpdateDto">
		-- 반품 배송택배 정보 등록
		<if test="requestCode != null and requestValue != null">
		update ord_shpn_info
		   set rtrn_dlvry_cmpny 		= #{requestCode},
		       rtrn_invc_no				= #{requestValue},
		       rtrn_invc_inp_dt 		= ifnull(rtrn_invc_inp_dt, now()),
		       upd_usr_id				= #{userId},
		       upd_dt					= now()
		 where ord_no 					= #{orderNo}
		   and ord_prdt_idx 			= #{orderProductSeq};
		</if>

		-- 주문 상품 반품 진행 처리
		update ord_prdt_info
		   set ord_prdt_stus			= 'R03',
			   upd_usr_id				= #{userId},
			   upd_dt					= now()
		 where ord_no					= #{orderNo}
		   and ord_prdt_idx				= #{orderProductSeq}
		   and prnr_cd					= #{partnerCode}
		   and ord_prdt_stus			= 'R01';
	</update>
	
	<update id="updateWithdrawalReturn" parameterType="kr.wrightbrothers.apps.order.dto.RequestReturnUpdateDto">
		update ord_prdt_info
		   set ord_prdt_stus			= 'D05',
		       cnc_rq_dt				= null,
		       cnc_rsn_cd				= null,
		       cnc_rsn					= null,
			   upd_usr_id				= #{userId},
			   upd_dt					= now()
		 where ord_no					= #{orderNo}
		   and ord_prdt_idx				= #{orderProductSeq}
		   and prnr_cd					= #{partnerCode}
		   and ord_prdt_stus			= 'R01'
	</update>

	<update id="updateRequestCompleteReturn" parameterType="kr.wrightbrothers.apps.order.dto.RequestReturnUpdateDto">
		<selectKey resultType="java.lang.Long" keyProperty="maxSeq" order="BEFORE">
			select
				ord_prdt_idx as maxSeq
			  from (
				select
				    row_number() over (order by fnl_sell_amt desc) as rank_amt,
				    dlvr_chrg_amt,
					ord_prdt_idx
				  from ord_prdt_info
				 where ord_no = #{orderNo}
				   and prnr_cd = #{partnerCode}
				 limit 1
			) s
		</selectKey>
		update ord_prdt_info
		   set ord_prdt_stus			= 'R06',
		       ord_prdt_pay_stus		= 'S06',
		       cnc_cplt_dt				= now(),
		       rtn_chg					= if(ord_prdt_idx = #{maxSeq}, #{returnDeliveryAmount}, 0),
		       cnc_pay_amt				= if(ord_prdt_idx = #{maxSeq}, fnl_sell_amt + dlvr_chrg_amt - #{returnDeliveryAmount}, fnl_sell_amt),
		       upd_usr_id				= #{userId},
		       upd_dt					= now()
		 where ord_no					= #{orderNo}
		   and ord_prdt_idx				= #{orderProductSeq}
		   and prnr_cd					= #{partnerCode}
		   and ord_prdt_stus			= 'R03'
	</update>

	<update id="updateReturnDeliveryAmount" parameterType="kr.wrightbrothers.apps.order.dto.RequestReturnUpdateDto">
		-- 반품 배송비
		update ord_prnr_info
		set rtrn_dlvr_chrg_amt = #{returnDeliveryAmount},
			upd_usr_id = #{userId},
			upd_dt = now()
		where ord_no = #{orderNo}
		  and prnr_cd = #{partnerCode}
	</update>

	<update id="updateNonReturn" parameterType="kr.wrightbrothers.apps.order.dto.RequestReturnUpdateDto">
		update ord_prdt_info
		   set ord_prdt_stus			= 'R04',
			   non_rtn_tp_cd 			= #{requestCode},
			   non_rtn_dt 				= now(),
		       upd_usr_id				= #{userId},
		       upd_dt					= now()
		 where ord_no					= #{orderNo}
		   and ord_prdt_idx				= #{orderProductSeq}
		   and prnr_cd					= #{partnerCode}
		   and ord_prdt_stus			= 'R03';

		update ord_shpn_info
		   set ord_dlvr_stus			= 'D01',
		       upd_usr_id				= #{userId},
		       upd_dt					= now()
		 where ord_no					= #{orderNo}
		   and ord_prdt_idx				= #{orderProductSeq}
		   and ord_dlvr_stus			= 'D05';

		update ord_prnr_info
		   set ord_stus					= 'R04',
			   upd_usr_id				= #{userId},
			   upd_dt					= now()
		 where ord_no					= #{orderNo}
		   and prnr_cd					= #{partnerCode}
	</update>

	<select id="findExcelReturnList" parameterType="kr.wrightbrothers.apps.order.dto.ReturnExcelDto$Param" resultType="kr.wrightbrothers.apps.order.dto.ReturnExcelDto$Response">
		select
			count(*) over (partition by o.ord_no) as order_product_count,
			count(*) over (partition by o.ord_no, p.prdt_cd) as product_count,
			date_format(p.cnc_rq_dt, '%Y-%m-%d') as request_return_day,
			o.ord_no as order_no,
			date_format(o.ord_dt, '%Y-%m-%d') as order_day,
			s.ord_nm as order_name,
			p.prdt_cd as product_code,
			p.prdt_nm as product_name,
			if(p.optn_nm is null, '', concat(p.optn_nm, '-', p.optn_val)) as product_option,
			p.prdt_qty as product_qty,
			p.fnl_sell_amt as product_sell_amount,
			p.fnl_sell_amt as product_amount,
			p.dlvr_chrg_amt as product_delivery_charge_amount,
			s.pay_amt as payment_amount,
			m.usr_nm as order_user_name,
			p.dlvr_tp as delivery_type,
		    ifnull(if(p.cnc_rsn is not null and p.cnc_rsn != '' , p.cnc_rsn, cr.intg_cd_val_nm), '') return_reason,
		    ifnull(s.rtrn_dlvr_chrg_amt, 0) as return_delivery_charge_amount,
		    ifnull(s.pay_amt - s.rtrn_dlvr_chrg_amt, 0) as cancel_payment,
		    ifnull(date_format(p.cnc_cplt_dt, '%Y-%m-%d'), '') as complete_return_day,
			ifnull(p.ord_prdt_stus, '') as return_status,
			ifnull(c.intg_cd_val_nm, '') as delivery_company,
			ifnull(d.rtrn_invc_no, '') as invoice_no,
		    ifnull(d.rtrn_rcpnt_nm, '') as recipient_name,
		    ifnull(d.rtrn_rcpnt_usr_phn, '') as recipient_user_phone,
			ifnull(concat('(', d.rtrn_rcpnt_adrs_zip_cd, ') ', d.rtrn_rcpnt_adrs), '') as recipient_address,
		    ifnull(d.rtrn_rcpnt_adrs_sub, '') as recipient_address_detail,
			ifnull(r.intg_cd_val_nm, '') as reason
		  from ord_info o
		 inner join ord_prnr_info s
			on o.ord_no = s.ord_no
		   and s.prnr_cd = #{partnerCode}
		 inner join ord_prdt_info p
			on o.ord_no = p.ord_no
		  left join ord_shpn_info d
			on p.ord_no = d.ord_no
		   and p.ord_prdt_idx = d.ord_prdt_idx
		  left join com_mbr_info m
			on o.ord_usr_id = m.usr_id
		  left join com_intg_cd_dtl c
			on d.rtrn_dlvry_cmpny = c.intg_cd_val
		  and c.intg_cd_id = '000044'
		 left join com_intg_cd_dtl r
		   on p.non_rtn_tp_cd = r.intg_cd_val
		  and r.intg_cd_id = '000085'
		 left join com_intg_cd_dtl cr
		   on p.cnc_rsn_cd = c.intg_cd_val
		  and c.intg_cd_id = '000074'
		where o.ord_no in
		<foreach collection="returnList" item="item" index="index" open="(" separator="," close=")">
			#{item}
		</foreach>
		 order by o.ord_no desc, p.prdt_cd
	</select>

	<select id="findReturnDelivery" parameterType="kr.wrightbrothers.apps.order.dto.ReturnDeliveryDto$Param" resultType="kr.wrightbrothers.apps.order.dto.ReturnDeliveryDto$Response">
		select
		    s.rtrn_dlvry_cmpny as deliveryCompanyCode,
		    s.rtrn_invc_no as invoiceNo,
		    s.rtrn_rcpnt_nm as recipientName,
		    s.rtrn_rcpnt_usr_phn as recipientPhone,
		    s.rtrn_rcpnt_adrs_zip_cd as recipientAddressZipCode,
		    s.rtrn_rcpnt_adrs as recipientAddress,
		    s.rtrn_rcpnt_adrs_sub as recipientAddressDetail,
		    p.prnr_cd as partnerCode,
			p.prdt_nm as productName
		  from ord_prdt_info p
		  left join ord_shpn_info s
			on p.ord_no = s.ord_no
		   and p.ord_prdt_idx = s.ord_prdt_idx
		 where p.ord_no = #{orderNo}
		   and p.ord_prdt_idx = #{orderProductSeq}
		   and p.prnr_cd = #{partnerCode}
	</select>

	<select id="findReturnPartner" parameterType="kr.wrightbrothers.apps.order.dto.ReturnPartnerDto$ReqBody" resultType="kr.wrightbrothers.apps.order.dto.ReturnPartnerDto$Response">
		select
			prnr_nm,
		    cs_phn
		from prnr_info
		where 1 = 1
		  and prnr_cd = #{prnrCd}
		  and ctrt_stus = 'C02'
		  limit 1
	</select>

	<update id="updateReturnDelivery" parameterType="kr.wrightbrothers.apps.order.dto.ReturnDeliveryDto$ReqBody">
		update ord_shpn_info
		   set rtrn_dlvry_cmpny = #{deliveryCompanyCode},
			   rtrn_invc_no = #{invoiceNo},
			   rtrn_rcpnt_nm = #{recipientName},
			   rtrn_rcpnt_usr_phn = #{recipientPhone},
			   rtrn_rcpnt_adrs_zip_cd = #{recipientAddressZipCode},
			   rtrn_rcpnt_adrs = #{recipientAddress},
			   rtrn_rcpnt_adrs_sub = #{recipientAddressDetail},
			   upd_usr_id = #{userId},
			   upd_dt = now()
		 where ord_no = #{orderNo}
		   and ord_prdt_idx = #{orderProductSeq}
	</update>

	<insert id="mockReturnData" parameterType="java.lang.String">
		insert into ord_info(ord_no, ord_nm, ord_stus, pay_stus, oine_ofl_tp, ord_qty, ord_usr_id, ord_dt, earn_pnt, rcpnt_nm, rcpnt_usr_phn, rcpnt_adrs, rcpnt_adrs_sub, rcpnt_adrs_zip_cd, rqst_dtls, ord_memo, ord_amt, dlvr_chrg_amt, ssp_pnt, sls_amt, pay_amt, pay_meth, mnt_rnt_amt, pym_dt, pay_gtwy_tp, pay_gtwy_site_cd, card_cd, card_no, card_instl, card_aprl_no, bank_cd, bank_acnt_no, dpstr_nm, remit_ddln_dt, rmtr_nm, remit_dt, csh_rcipt_no, csh_rcipt_aprl_no, cre_usr_id, cre_dt, upd_usr_id, upd_dt, asis_idx)
		values ('192211151341424534', '테스트 상품명', 'R01', 'S10', '0', 1, 'foot3go@naver.com', '2022-11-15 13:42:25', null, '심병철', '01047183922', '서울 강남구 테헤란로 21', '라이트브라더스', null, null, null, 100, 0, 0, 0, 100, 'P01', null, '2022-11-15 13:42:00', 'PG02', 'T0000', 'CCLG', '4658870000008424', '00', '27886734', null, null, null, '0000-00-00 00:00:00', null, '0000-00-00 00:00:00', null, null, 'foot3go@naver.com', '2022-11-15 13:42:25', 'foot3go@naver.com', '2022-11-15 17:44:30', 10426);

		insert into ord_prnr_info(ord_no, prnr_cd, ord_nm, ord_stus, pay_stus, ord_amt, dlvr_chrg_amt, pay_amt, ord_memo, dlvry_memo, rtrn_memo, cre_usr_id, cre_dt, upd_usr_id, upd_dt)
		values ('192211151341424534', 'PT0000001', '테스트 상품명', 'R01', 'S10', 100, 0, 100, null, null, null, 'foot3go@naver.com', '2022-11-15 13:42:25', 'foot3go@naver.com', '2022-11-15 17:43:41');

		insert into ord_shpn_info(ord_no, ord_prdt_idx, prdt_cd, ord_dlvr_stus, rcpnt_nm, rcpnt_usr_phn, rcpnt_adrs, rcpnt_adrs_sub, rcpnt_adrs_zip_cd, dlvry_cmpny, invc_no, invc_inp_dt, dlvry_st_dt, dlvry_end_dt, dlvry_memo, rtrn_rcpnt_nm, rtrn_rcpnt_usr_phn, rtrn_rcpnt_adrs, rtrn_rcpnt_adrs_sub, rtrn_rcpnt_adrs_zip_cd, rtrn_memo, rtrn_dlvry_cmpny, rtrn_invc_no, rtrn_invc_inp_dt, rtrn_dlvry_st_dt, rtrn_dlvry_end_dt, rtrn_prhb_dlvry_cmpny, rtrn_prhb_invc_no, rtrn_prhb_invc_inp_dt, rtrn_prhb_dlvry_st_dt, rtrn_prhb_dlvry_end_dt, cre_usr_id, cre_dt, upd_usr_id, upd_dt)
		values ('192211151341424534', 1, 'PARBF5EYKZ', 'D05', null, null, null, null, null, null, null, '0000-00-00 00:00:00', null, '2022-11-15 17:43:00', null, '심병철', '01047183922', '서울 그 어딘가', '라이트브라더스', '12345', null, 'cjeorl', '1234234234', null, null, null, null, null, null, null, null, 'foot3go@naver.com', '2022-11-15 17:43:41', 'foot3go@naver.com', '2022-11-15 17:44:30');

		insert into ord_prdt_info(ord_no, ord_prdt_idx, ord_prdt_stus, ord_prdt_pay_stus, prnr_cd, prdt_cd, prdt_nm, optn_nm, fnl_sell_amt, optn_val, prdt_qty, optn_schg, dlvr_chrg_amt, dlvr_tp, dlvr_pck_dt, earn_pnt, tax, cnc_rq_dt, cnc_cplt_dt, cnc_rsn_cd, cnc_rsn, non_rtn_dt, non_rtn_tp_cd, cnc_rmtr_nm, cnc_bank_cd, cnc_bank_acnt_no, slr_usr_id, cre_usr_id, cre_dt, upd_usr_id, upd_dt, asis_item_idx)
		values ('192211151341424534', 1, 'R01', 'S10', 'PT0000001', 'PARBF5EYKZ', '테스트 상품명', '색상', 100, '블랙', 1, '0', 0, 'D02', null, 0, 9, '2022-11-15 17:44:00', null, 'C01', '유성이가 도와줬음~~~', null, null, '', '', '', 'foot3go@naver.com', 'foot3go@naver.com', '2022-11-15 13:42:25', 'foot3go@naver.com', '2022-11-15 00:00:00', 10820);

		insert into ord_trsctn_info (ord_no, pay_gtwy_tp, trsctn_id_tp, trsctn_proc_tp, trsctn_id, trsctn_rslt_cd, trsctn_rslt_msg, cre_usr_id, cre_dt, upd_usr_id, upd_dt)
		values ('192211151341424534', 'PG02', 'P01', 'T01', '22569980339961', null, '{order_no=10426, mall_taxno=1138521083, partcanc_yn=Y, noinf=N, res_msg=정상처리, coupon_mny=0, pg_txid=1115134225MP01980339960000000001000027886734, card_bin_type_01=0, trace_no=T0000BFDgPAB0B0C, card_mny=100, shop_user_id=happyin022002@gmail.com, res_vat_mny=10, ca_order_id=10426, res_tax_flag=TG03, acqu_name=신한카드, card_no=4658870000008424, quota=00, van_cd=VNKC, acqu_cd=CCLG, amount=100, cert_no=22569980339961, van_apptime=20221115134225, use_point=0, res_free_mny=0, pay_method=PACA, card_bin_bank_cd=0301, bizx_numb=0013425574, res_cd=0000, escw_yn=N, join_cd=0000, app_time=20221115134225, tno=22569980339961, card_bin_type_02=0, card_cd=CCLG, res_en_msg=processing completed, card_name=신한카드, mcht_taxno=1138521083, res_green_deposit_mny=0, res_tax_mny=90, app_no=27886734}', 'happyin022002@gmail.com', '2022-11-15 13:42:25', 'happyin022002@gmail.com', '2022-11-15 13:42:25');

		insert into ord_trsctn_info (ord_no, pay_gtwy_tp, trsctn_id_tp, trsctn_proc_tp, trsctn_id, trsctn_rslt_cd, trsctn_rslt_msg, cre_usr_id, cre_dt, upd_usr_id, upd_dt)
		values ('192211151341424534', 'PG02', 'P01', 'T01', '22569980339961', null, '{order_no=10426, mall_taxno=1138521083, partcanc_yn=Y, noinf=N, res_msg=정상처리, coupon_mny=0, pg_txid=1115134225MP01980339960000000001000027886734, card_bin_type_01=0, trace_no=T0000BFDgPAB0B0C, card_mny=100, shop_user_id=happyin022002@gmail.com, res_vat_mny=10, ca_order_id=10426, res_tax_flag=TG03, acqu_name=신한카드, card_no=4658870000008424, quota=00, van_cd=VNKC, acqu_cd=CCLG, amount=100, cert_no=22569980339961, van_apptime=20221115134225, use_point=0, res_free_mny=0, pay_method=PACA, card_bin_bank_cd=0301, bizx_numb=0013425574, res_cd=0000, escw_yn=N, join_cd=0000, app_time=20221115134225, tno=22569980339961, card_bin_type_02=0, card_cd=CCLG, res_en_msg=processing completed, card_name=신한카드, mcht_taxno=1138521083, res_green_deposit_mny=0, res_tax_mny=90, app_no=27886734}', 'happyin022002@gmail.com', '2022-11-15 17:43:41', 'happyin022002@gmail.com', '2022-11-15 17:43:41');

		insert into ord_trsctn_info (ord_no, pay_gtwy_tp, trsctn_id_tp, trsctn_proc_tp, trsctn_id, trsctn_rslt_cd, trsctn_rslt_msg, cre_usr_id, cre_dt, upd_usr_id, upd_dt)
		values ('192211151341424534', 'PG02', 'P01', 'T01', '22569980339961', null, '{order_no=10426, mall_taxno=1138521083, partcanc_yn=Y, noinf=N, res_msg=정상처리, coupon_mny=0, pg_txid=1115134225MP01980339960000000001000027886734, card_bin_type_01=0, trace_no=T0000BFDgPAB0B0C, card_mny=100, shop_user_id=happyin022002@gmail.com, res_vat_mny=10, ca_order_id=10426, res_tax_flag=TG03, acqu_name=신한카드, card_no=4658870000008424, quota=00, van_cd=VNKC, acqu_cd=CCLG, amount=100, cert_no=22569980339961, van_apptime=20221115134225, use_point=0, res_free_mny=0, pay_method=PACA, card_bin_bank_cd=0301, bizx_numb=0013425574, res_cd=0000, escw_yn=N, join_cd=0000, app_time=20221115134225, tno=22569980339961, card_bin_type_02=0, card_cd=CCLG, res_en_msg=processing completed, card_name=신한카드, mcht_taxno=1138521083, res_green_deposit_mny=0, res_tax_mny=90, app_no=27886734}', 'happyin022002@gmail.com', '2022-11-15 17:43:41', 'happyin022002@gmail.com', '2022-11-15 17:43:41');

		insert into ord_trsctn_info (ord_no, pay_gtwy_tp, trsctn_id_tp, trsctn_proc_tp, trsctn_id, trsctn_rslt_cd, trsctn_rslt_msg, cre_usr_id, cre_dt, upd_usr_id, upd_dt)
		values ('192211151341424534', 'PG02', 'P01', 'T02', '22569980339961', null, '{order_no=10426, mall_taxno=1138521083, partcanc_yn=Y, noinf=N, res_msg=정상처리, coupon_mny=0, pg_txid=1115134225MP01980339960000000001000027886734, card_bin_type_01=0, trace_no=T0000BFDgPAB0B0C, card_mny=100, shop_user_id=happyin022002@gmail.com, res_vat_mny=10, ca_order_id=10426, res_tax_flag=TG03, acqu_name=신한카드, card_no=4658870000008424, quota=00, van_cd=VNKC, acqu_cd=CCLG, amount=100, cert_no=22569980339961, van_apptime=20221115134225, use_point=0, res_free_mny=0, pay_method=PACA, card_bin_bank_cd=0301, bizx_numb=0013425574, res_cd=0000, escw_yn=N, join_cd=0000, app_time=20221115134225, tno=22569980339961, card_bin_type_02=0, card_cd=CCLG, res_en_msg=processing completed, card_name=신한카드, mcht_taxno=1138521083, res_green_deposit_mny=0, res_tax_mny=90, app_no=27886734}', 'happyin022002@gmail.com', '2022-11-15 17:44:30', 'happyin022002@gmail.com', '2022-11-15 17:44:30');

		insert into ord_trsctn_info (ord_no, pay_gtwy_tp, trsctn_id_tp, trsctn_proc_tp, trsctn_id, trsctn_rslt_cd, trsctn_rslt_msg, cre_usr_id, cre_dt, upd_usr_id, upd_dt)
		values ('192211151341424534', 'PG02', 'P01', 'T02', '22569980339961', null, '주문 취소 요청', 'happyin022002@gmail.com', '2022-11-15 17:44:30', 'happyin022002@gmail.com', '2022-11-15 17:44:30');
	</insert>

</mapper>
