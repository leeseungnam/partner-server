<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.wrightbrothers.apps.order.query.Order">

	<select id="isOrderAuth" parameterType="kr.wrightbrothers.apps.order.dto.OrderAuthDto" resultType="boolean">
		select
		    if(count(o.ord_no) = 0, true, false) as isOrderAuth
		  from ord_info o
		 inner join ord_prnr_info s
		    on o.ord_no = s.ord_no
		   and s.prnr_cd = #{partnerCode}
		 where o.ord_no = #{orderNo}
	</select>

	<select id="isDeliveryStatusCheck" parameterType="kr.wrightbrothers.apps.order.dto.DeliveryInvoiceUpdateDto" resultType="boolean">
		select
		    if(ord_stus in ('D01', 'D03'), false, true) as isDeliveryCheck
		  from ord_prnr_info
		 where ord_no = #{orderNo}
		   and prnr_cd = #{partnerCode}
	</select>

	<select id="findOrderList" parameterType="kr.wrightbrothers.apps.order.dto.OrderListDto$Param" resultType="kr.wrightbrothers.apps.order.dto.OrderListDto$Response">
		-- 주문내역 목록 조회
		select
		    o.ord_no as order_no,
		    date_format(o.ord_dt, '%Y-%m-%d') as order_day,
			m.usr_nm as order_user_name,
			s.ord_stus as order_status_code,
			s.ord_stus as order_status_name,
			o.pay_meth as payment_method_code,
			o.pay_meth as payment_method_name,
			s.ord_nm as order_name,
			s.ord_amt as order_amount,
			s.pay_amt as payment_amount,
			date_format(o.pym_dt, '%Y-%m-%d') as payment_day,
			s.pay_stus as payment_status_code,
			s.pay_stus as payment_status_name
		  from ord_info o
		  left join com_mbr_info m
			on o.ord_usr_id = m.usr_id
		 inner join ord_prnr_info s
			on o.ord_no = s.ord_no
		   and s.prnr_cd = #{partnerCode}
		 <choose>
			 <when test="keywordValue != null and keywordValue != ''">
			 	<if test="keywordType == 'MODEL'">
		 inner join (
		     select distinct
		         p.ord_no
		       from ord_prdt_info p
		      inner join prdt_main m
				 on p.prdt_cd = m.prdt_cd
		        and p.prnr_cd = m.pur_rq_no
		      where p.prnr_cd = #{partnerCode}
			<foreach collection="keywordValueList" item="item" index="index" open="and (" separator="OR" close=")">
				m.prdt_nm like #{item} '%'
			</foreach>
		 ) p on o.ord_no = p.ord_no
				</if>
			 </when>
		 </choose>
		<where>
			<choose>
				<when test="keywordValue != null and keywordValue != ''">
					<choose>
						<when test="keywordType == 'NO'">
							<foreach collection="keywordValueList" item="item" index="index" open="and (" separator="OR" close=")">
								o.ord_no like #{item} '%'
							</foreach>
						</when>
						<when test="keywordType == 'NAME'">
							<foreach collection="keywordValueList" item="item" index="index" open="and (" separator="OR" close=")">
								s.ord_nm like #{item} '%'
							</foreach>
						</when>
						<when test="keywordType == 'USER'">
							<foreach collection="keywordValueList" item="item" index="index" open="and (" separator="OR" close=")">
								m.usr_nm like #{item} '%'
							</foreach>
						</when>
					</choose>
				</when>
				<otherwise>
					<choose>
						<when test="rangeType == 'PAYMENT'.toString()">
							and o.pym_dt between concat(#{startDay}, ' 00:00:00.0') and concat(#{endDay}, ' 23:59:59.9')
						</when>
						<when test="rangeType == 'CANCEL'.toString()">
		   and exists (
		   		select
		   			ord_no
		   		  from ord_prdt_info
		   		 where ord_no = o.ord_no
		   		   and cnc_dt between concat(#{startDay}, ' 00:00:00.0') and concat(#{endDay}, ' 23:59:59.9')
			)
						</when>
					</choose>
					-- 주문 상태
					<foreach collection="orderStatus" item="item" index="index" open="and s.ord_stus in (" separator="," close=")">
						#{item}
					</foreach>
					-- 결제 상태
					<foreach collection="paymentStatus" item="item" index="index" open="and s.pay_stus in (" separator="," close=")">
						#{item}
					</foreach>
					-- 결제 방법
					<foreach collection="paymentMethod" item="item" index="index" open="and o.pay_meth in (" separator="," close=")">
						#{item}
					</foreach>
				</otherwise>
			</choose>
		</where>
		  <choose>
				<when test="sortType == 'ORD'.toString()">
					order by o.ord_dt desc
				</when>
				<when test="sortType == 'PYT'.toString()">
					order by o.pym_dt desc
				</when>
				<when test="sortType == 'LSAMT'.toString()">
					order by s.pay_amt
				</when>
				<when test="sortType == 'HSAMT'.toString()">
					order by s.pay_amt desc
				</when>
			</choose>
	</select>

	<select id="findOrderStatusStatistics" parameterType="kr.wrightbrothers.apps.order.dto.OrderListDto$Param" resultType="kr.wrightbrothers.apps.order.dto.OrderListDto$Statistics">
		-- 주문내역 주문 집계 건수
		select
			count(1) as totalOrderCount,											-- 전체주문 건수
		    ifnull(sum(if(s.ord_stus = 'O05', 1, 0)), 0) as completeOrderCount,		-- 주문완료 건수
		    ifnull(sum(if(s.ord_stus = 'D01', 1, 0)), 0) as readyProductCount,		-- 상품준비 건수
		    ifnull(sum(if(s.pay_stus = 'S06', 1, 0)), 0) as requestCancelCount,		-- 취소요청 건수
		    ifnull(sum(if(s.ord_stus = 'C05', 1, 0)), 0) as confirmPurchaseCount,	-- 구매확정 건수
		    ifnull(sum(if(s.ord_stus = 'R05', 1, 0)), 0) as completeReturnCount,	-- 반품완료 건수
			ifnull(sum(if(s.pay_stus = 'S09', 1, 0)), 0) as failCancelCount			-- 취소실패 건수
		  from ord_info o
		 inner join ord_prnr_info s
		    on o.ord_no = s.ord_no
		   and s.prnr_cd = #{partnerCode}
		<choose>
			<when test="keywordValue != null and keywordValue != ''">
				<if test="keywordType == 'MODEL'">
		 inner join (
		 	select distinct
				p.ord_no
			  from ord_prdt_info p
			 inner join prdt_main m
				on p.prdt_cd = m.prdt_cd
			   and p.prnr_cd = m.pur_rq_no
			 where p.prnr_cd = #{partnerCode}
			<foreach collection="keywordValueList" item="item" index="index" open="and (" separator="OR" close=")">
				m.prdt_nm like #{item} '%'
			</foreach>
		 ) p on o.ord_no = p.ord_no
				</if>
			</when>
		</choose>
		<where>
			<choose>
				<when test="keywordValue != null and keywordValue != ''">
					<choose>
						<when test="keywordType == 'NO'">
							<foreach collection="keywordValueList" item="item" index="index" open="and (" separator="OR" close=")">
								o.ord_no like #{item} '%'
							</foreach>
						</when>
						<when test="keywordType == 'NAME'">
							<foreach collection="keywordValueList" item="item" index="index" open="and (" separator="OR" close=")">
								s.ord_nm like #{item} '%'
							</foreach>
						</when>
						<when test="keywordType == 'USER'">
							<foreach collection="keywordValueList" item="item" index="index" open="and (" separator="OR" close=")">
								m.usr_nm like #{item} '%'
							</foreach>
						</when>
					</choose>
				</when>
				<otherwise>
					<choose>
						<when test="rangeType == 'PAYMENT'.toString()">
							and o.pym_dt between concat(#{startDay}, ' 00:00:00.0') and concat(#{endDay}, ' 23:59:59.9')
						</when>
						<when test="rangeType == 'CANCEL'.toString()">
				and exists (
					select
						ord_no
					from ord_prdt_info
					where ord_no = o.ord_no
					and cnc_dt between concat(#{startDay}, ' 00:00:00.0') and concat(#{endDay}, ' 23:59:59.9')
				)
						</when>
					</choose>
					-- 주문 상태
					<foreach collection="orderStatus" item="item" index="index" open="and s.ord_stus in (" separator="," close=")">
						#{item}
					</foreach>
					-- 결제 상태
					<foreach collection="paymentStatus" item="item" index="index" open="and s.pay_stus in (" separator="," close=")">
						#{item}
					</foreach>
					-- 결제 방법
					<foreach collection="paymentMethod" item="item" index="index" open="and o.pay_meth in (" separator="," close=")">
						#{item}
					</foreach>
				</otherwise>
			</choose>
		</where>
	</select>
	
	<select id="findOrder" parameterType="kr.wrightbrothers.apps.order.dto.OrderFindDto$Param" resultType="kr.wrightbrothers.apps.order.dto.OrderDto">
		-- 주문내역 기본 정보
		select
		    o.ord_no as order_no,
		    o.ord_dt as order_date,
		    s.ord_stus as order_status_code,
		    s.ord_stus as order_status_name,
		    (select count(ord_prdt_idx) order_qty from ord_prdt_info where ord_no = s.ord_no and prnr_cd = s.prnr_cd) as order_qty,
		    m.usr_cd as order_user_code,
		    m.usr_id as order_user_id,
		    m.usr_nm as order_user_name,
		    m.usr_phn as order_user_phone,
		    o.rcpnt_nm as recipient_name,
		    o.rcpnt_usr_phn as recipient_phone,
		    o.rcpnt_adrs_zip_cd as recipient_address_zip_code,
		    o.rcpnt_adrs as recipient_address,
		    o.rcpnt_adrs_sub as recipient_address_detail,
		    o.rqst_dtls as request_detail,
		    s.ord_memo as order_memo,
		    s.rtrn_memo as return_memo,
		    s.dlvry_memo as delivery_memo
		  from ord_prnr_info s
		 inner join ord_info o
			on s.ord_no = o.ord_no
		  left join com_mbr_info m
		    on o.ord_usr_id = m.usr_id
		 where s.ord_no = #{orderNo}
		   and s.prnr_cd = #{partnerCode}
	</select>

	<select id="findOrderProduct" parameterType="kr.wrightbrothers.apps.order.dto.OrderFindDto$Param" resultType="kr.wrightbrothers.apps.order.dto.ProductDto">
		-- 주문내역 상품 리스트
		select
		    p.ord_prdt_idx as order_product_seq,
		    p.prdt_cd as product_code,
		    p.prdt_nm as product_name,
		    p.ord_prdt_stus as order_product_status_code,
		    p.ord_prdt_stus as order_product_status_name,
		    p.fnl_sell_amt as final_sell_amount,
		    p.optn_nm as option_name,
		    p.optn_schg as option_surcharge,
		    p.prdt_qty as product_qty,
		    p.dlvr_tp as delivery_type,
		    p.dlvr_tp as delivery_name,
		    p.dlvr_chrg_amt as delivery_charge_amount,
			date_format(p.cnc_cplt_dt, '%Y-%m-%d') as cancel_day,
		    if(p.cnc_rsn_cd = 'C99', p.cnc_rsn, c.intg_cd_val_nm) as cancel_reason,
			date_format(s.rtrn_dlvry_end_dt, '%Y-%m-%d') as return_delivery_endDay,
			s.rtrn_dlvry_cmpny as returnDeliveryCompany,
			s.rtrn_invc_no as returnInvoiceNo
		  from ord_prdt_info p
		  left join ord_shpn_info s
		    on p.ord_no = s.ord_no
		   and p.ord_prdt_idx = s.ord_prdt_idx
		  left join com_intg_cd_dtl c
			on p.cnc_rsn_cd = c.intg_cd_val
		   and c.intg_cd_id = '000074'
		 where p.ord_no = #{orderNo}
		   and p.prnr_cd = #{partnerCode}
	</select>

	<update id="updateOrderMemo" parameterType="kr.wrightbrothers.apps.order.dto.OrderMemoUpdateDto">
		update ord_prnr_info
		   set ord_memo = #{orderMemo},
		       upd_usr_id = #{userId},
		       upd_dt = now()
		 where ord_no = #{orderNo}
		   and prnr_cd = #{partnerCode}
	</update>

	<update id="updateOrderStatusRefresh" parameterType="java.lang.String" statementType="CALLABLE">
		CALL SP_updateOrderStatus(#{orderNo})
	</update>

	<select id="findExcelOrderList" parameterType="kr.wrightbrothers.apps.order.dto.OrderExcelDto$Param" resultType="kr.wrightbrothers.apps.order.dto.OrderExcelDto$Response">
		select
		    count(*) over (partition by o.ord_no) as product_count,
		    date_format(o.ord_dt, '%Y-%m-%d') as order_day,
		    o.ord_no as order_no,
		    m.usr_nm as order_user_name,
		    s.ord_stus as order_status,
		    s.ord_nm as order_name,
		    p.prdt_nm as product_name,
		    if(p.optn_nm is null, '', concat(p.optn_nm, '-', p.optn_val)) as product_option,
		    p.prdt_qty as product_qty,
		    p.fnl_sell_amt as product_sell_amount,
		    p.fnl_sell_amt as product_amount,
		    s.pay_amt + s.dlvr_chrg_amt as payment_amount,
		    p.dlvr_chrg_amt as product_delivery_charge_amount,
		    o.pay_meth as payment_method,
		    date_format(o.pym_dt, '%Y-%m-%d') as payment_day,
		    s.pay_stus as payment_status,
		    ifnull(date_format(p.cnc_cplt_dt, '%Y-%m-%d'), '') as cancel_day,
			ifnull(if(c.intg_cd_val_nm is null or c.intg_cd_val = 'C99', p.cnc_rsn, c.intg_cd_val_nm), '') as cancel_reason,
		    ifnull(concat('(', d.rcpnt_adrs_zip_cd, ') ', d.rcpnt_adrs, ', ', d.rcpnt_adrs_sub), '') as address,
		    ifnull(o.rqst_dtls, '') as request_detail,
		    ifnull(s.ord_memo, '') as order_memo
		  from ord_info o
		 inner join ord_prnr_info s
			on o.ord_no = s.ord_no
		   and s.prnr_cd = #{partnerCode}
		 inner join ord_prdt_info p
			on o.ord_no = p.ord_no
		 inner join ord_shpn_info d
		    on p.ord_no = d.ord_no
		   and p.ord_prdt_idx = d.ord_prdt_idx
		  left join com_intg_cd_dtl c
		    on p.cnc_rsn_cd = c.intg_cd_val
		   and c.intg_cd_id = '000074'
		  left join com_mbr_info m
			on o.ord_usr_id = m.usr_id
		 where o.ord_no in
		<foreach collection="orderNoList" item="item" index="index" open="(" separator="," close=")">
			#{item}
		</foreach>
		  order by o.ord_no desc
	</select>

	<update id="updatePreparingDelivery" parameterType="kr.wrightbrothers.apps.order.dto.DeliveryPreparingDto">
		-- 주문상품
		update ord_prdt_info
		   set ord_prdt_stus = 'D01',
		       upd_usr_id = #{userId},
		       upd_dt = now()
		 where ord_no = #{orderNo}
		   and prnr_cd = #{partnerCode}
		   and ord_prdt_stus = 'O05';

		insert into ord_shpn_info(ord_no,
		                          ord_prdt_idx,
		                          prdt_cd,
		                          ord_dlvr_stus,
		                          rcpnt_nm,
		                          rcpnt_usr_phn,
		                          rcpnt_adrs,
		                          rcpnt_adrs_sub,
		                          rcpnt_adrs_zip_cd,
		                          cre_usr_id,
		                          upd_usr_id)
		select
		    p.ord_no,
		    p.ord_prdt_idx,
		    p.prdt_cd,
		    'D01',
		    o.rcpnt_nm,
		    o.rcpnt_usr_phn,
		    o.rcpnt_adrs,
		    o.rcpnt_adrs_sub,
		    o.rcpnt_adrs_zip_cd,
		    #{userId},
		    #{userId}
		  from ord_prdt_info p
		 inner join ord_info o
			on p.ord_no = o.ord_no
		 where p.ord_no = #{orderNo}
		   and p.prnr_cd = #{partnerCode};
	</update>
	
	<select id="isNonOrderComplete" parameterType="kr.wrightbrothers.apps.order.dto.DeliveryPreparingDto" resultType="boolean">
		select
			if(count(ord_no) = 0, true, false) as isNonOrderComplete
		  from ord_prnr_info
		 where ord_no = #{orderNo}
		   and prnr_cd = #{partnerCode}
		   and ord_stus = 'O05'
		   and pay_stus = 'S10'
	</select>
	
	<select id="findOrderProductSeq" parameterType="kr.wrightbrothers.apps.order.dto.DeliveryPreparingDto" resultType="java.lang.Integer">
		select
		    ord_prdt_idx
		  from ord_prdt_info
		 where ord_no = #{orderNo}
		   and prnr_cd = #{partnerCode}
	</select>

	<insert id="mockOrderData" parameterType="java.lang.String">
		insert into ord_info(ord_no, ord_nm, ord_stus, pay_stus, oine_ofl_tp, ord_qty, ord_usr_id, ord_dt, earn_pnt, rcpnt_nm, rcpnt_usr_phn, rcpnt_adrs, rcpnt_adrs_sub, rcpnt_adrs_zip_cd, rqst_dtls, ord_memo, ord_amt, dlvr_chrg_amt, ssp_pnt, sls_amt, pay_amt, pay_meth, mnt_rnt_amt, pym_dt, pay_gtwy_tp, pay_gtwy_site_cd, card_cd, card_no, card_instl, card_aprl_no, bank_cd, bank_acnt_no, dpstr_nm, remit_ddln_dt, rmtr_nm, remit_dt, csh_rcipt_flg, csh_rcipt_tp, csh_rcipt_no, csh_rcipt_ppse_cd, csh_rcipt_dt, csh_rcipt_aprl_flg, csh_rcipt_aprl_no, cre_usr_id, cre_dt, upd_usr_id, upd_dt, asis_idx)
		values ('192211151341424534', '테스트 상품명', 'O05', 'S10', '0', 1, 'foot3go@naver.com', '2022-11-15 13:42:25', null, '심병철', '01047183922', '서울 강남구 테헤란로 21', '라이트브라더스', null, null, null, 100, 0, 0, 0, 100, 'P01', null, '2022-11-15 13:42:00', 'PG02', 'T0000', 'CCLG', '4658870000008424', '00', '27886734', null, null, null, '0000-00-00 00:00:00', null, '0000-00-00 00:00:00', 'N', null, null, null, '0000-00-00 00:00:00', null, null, 'foot3go@naver.com', '2022-11-15 13:42:25', 'foot3go@naver.com', '2022-11-15 17:44:30', 10426);

		insert into ord_prnr_info(ord_no, prnr_cd, ord_nm, ord_stus, pay_stus, ord_amt, dlvr_chrg_amt, pay_amt, ord_memo, dlvry_memo, rtrn_memo, cre_usr_id, cre_dt, upd_usr_id, upd_dt)
		values ('192211151341424534', 'PT0000001', '테스트 상품명', 'O05', 'S10', 100, 0, 100, null, null, null, 'foot3go@naver.com', '2022-11-15 13:42:25', 'foot3go@naver.com', '2022-11-15 17:43:41');

		insert into ord_prdt_info(ord_no, ord_prdt_idx, ord_prdt_stus, ord_prdt_pay_stus, prnr_cd, prdt_cd, prdt_nm, optn_nm, fnl_sell_amt, optn_val, prdt_qty, optn_schg, dlvr_chrg_amt, dlvr_tp, dlvr_pck_dt, earn_pnt, tax, cnc_rq_dt, cnc_cplt_dt, cnc_rsn_cd, cnc_rsn, non_rtn_dt, non_rtn_tp_cd, cnc_rmtr_nm, cnc_bank_cd, cnc_bank_acnt_no, slr_usr_id, cre_usr_id, cre_dt, upd_usr_id, upd_dt, asis_item_idx)
		values ('192211151341424534', 1, 'O05', 'S10', 'PT0000001', 'PARBF5EYKZ', '테스트 상품명', '색상', 100, '블랙', 1, '0', 0, 'D02', null, 0, 9, '2022-11-15 17:44:00', null, 'C01', '유성이가 도와줬음~~~', null, null, '', '', '', 'foot3go@naver.com', 'foot3go@naver.com', '2022-11-15 13:42:25', 'foot3go@naver.com', '2022-11-15 00:00:00', 10820);

		insert into ord_trsctn_info (ord_no, pay_gtwy_tp, trsctn_id_tp, trsctn_proc_tp, trsctn_id, trsctn_rslt_cd, trsctn_rslt_msg, cre_usr_id, cre_dt, upd_usr_id, upd_dt)
		values ('192211151341424534', 'PG02', 'P01', 'T01', '22569980339961', null, '{order_no=10426, mall_taxno=1138521083, partcanc_yn=Y, noinf=N, res_msg=정상처리, coupon_mny=0, pg_txid=1115134225MP01980339960000000001000027886734, card_bin_type_01=0, trace_no=T0000BFDgPAB0B0C, card_mny=100, shop_user_id=happyin022002@gmail.com, res_vat_mny=10, ca_order_id=10426, res_tax_flag=TG03, acqu_name=신한카드, card_no=4658870000008424, quota=00, van_cd=VNKC, acqu_cd=CCLG, amount=100, cert_no=22569980339961, van_apptime=20221115134225, use_point=0, res_free_mny=0, pay_method=PACA, card_bin_bank_cd=0301, bizx_numb=0013425574, res_cd=0000, escw_yn=N, join_cd=0000, app_time=20221115134225, tno=22569980339961, card_bin_type_02=0, card_cd=CCLG, res_en_msg=processing completed, card_name=신한카드, mcht_taxno=1138521083, res_green_deposit_mny=0, res_tax_mny=90, app_no=27886734}', 'happyin022002@gmail.com', '2022-11-15 13:42:25', 'happyin022002@gmail.com', '2022-11-15 13:42:25');

		insert into ord_trsctn_info (ord_no, pay_gtwy_tp, trsctn_id_tp, trsctn_proc_tp, trsctn_id, trsctn_rslt_cd, trsctn_rslt_msg, cre_usr_id, cre_dt, upd_usr_id, upd_dt)
		values ('192211151341424534', 'PG02', 'P01', 'T01', '22569980339961', null, '{order_no=10426, mall_taxno=1138521083, partcanc_yn=Y, noinf=N, res_msg=정상처리, coupon_mny=0, pg_txid=1115134225MP01980339960000000001000027886734, card_bin_type_01=0, trace_no=T0000BFDgPAB0B0C, card_mny=100, shop_user_id=happyin022002@gmail.com, res_vat_mny=10, ca_order_id=10426, res_tax_flag=TG03, acqu_name=신한카드, card_no=4658870000008424, quota=00, van_cd=VNKC, acqu_cd=CCLG, amount=100, cert_no=22569980339961, van_apptime=20221115134225, use_point=0, res_free_mny=0, pay_method=PACA, card_bin_bank_cd=0301, bizx_numb=0013425574, res_cd=0000, escw_yn=N, join_cd=0000, app_time=20221115134225, tno=22569980339961, card_bin_type_02=0, card_cd=CCLG, res_en_msg=processing completed, card_name=신한카드, mcht_taxno=1138521083, res_green_deposit_mny=0, res_tax_mny=90, app_no=27886734}', 'happyin022002@gmail.com', '2022-11-15 17:43:41', 'happyin022002@gmail.com', '2022-11-15 17:43:41');

		insert into ord_trsctn_info (ord_no, pay_gtwy_tp, trsctn_id_tp, trsctn_proc_tp, trsctn_id, trsctn_rslt_cd, trsctn_rslt_msg, cre_usr_id, cre_dt, upd_usr_id, upd_dt)
		values ('192211151341424534', 'PG02', 'P01', 'T01', '22569980339961', null, '{order_no=10426, mall_taxno=1138521083, partcanc_yn=Y, noinf=N, res_msg=정상처리, coupon_mny=0, pg_txid=1115134225MP01980339960000000001000027886734, card_bin_type_01=0, trace_no=T0000BFDgPAB0B0C, card_mny=100, shop_user_id=happyin022002@gmail.com, res_vat_mny=10, ca_order_id=10426, res_tax_flag=TG03, acqu_name=신한카드, card_no=4658870000008424, quota=00, van_cd=VNKC, acqu_cd=CCLG, amount=100, cert_no=22569980339961, van_apptime=20221115134225, use_point=0, res_free_mny=0, pay_method=PACA, card_bin_bank_cd=0301, bizx_numb=0013425574, res_cd=0000, escw_yn=N, join_cd=0000, app_time=20221115134225, tno=22569980339961, card_bin_type_02=0, card_cd=CCLG, res_en_msg=processing completed, card_name=신한카드, mcht_taxno=1138521083, res_green_deposit_mny=0, res_tax_mny=90, app_no=27886734}', 'happyin022002@gmail.com', '2022-11-15 17:43:41', 'happyin022002@gmail.com', '2022-11-15 17:43:41');

		insert into ord_trsctn_info (ord_no, pay_gtwy_tp, trsctn_id_tp, trsctn_proc_tp, trsctn_id, trsctn_rslt_cd, trsctn_rslt_msg, cre_usr_id, cre_dt, upd_usr_id, upd_dt)
		values ('192211151341424534', 'PG02', 'P01', 'T02', '22569980339961', null, '{order_no=10426, mall_taxno=1138521083, partcanc_yn=Y, noinf=N, res_msg=정상처리, coupon_mny=0, pg_txid=1115134225MP01980339960000000001000027886734, card_bin_type_01=0, trace_no=T0000BFDgPAB0B0C, card_mny=100, shop_user_id=happyin022002@gmail.com, res_vat_mny=10, ca_order_id=10426, res_tax_flag=TG03, acqu_name=신한카드, card_no=4658870000008424, quota=00, van_cd=VNKC, acqu_cd=CCLG, amount=100, cert_no=22569980339961, van_apptime=20221115134225, use_point=0, res_free_mny=0, pay_method=PACA, card_bin_bank_cd=0301, bizx_numb=0013425574, res_cd=0000, escw_yn=N, join_cd=0000, app_time=20221115134225, tno=22569980339961, card_bin_type_02=0, card_cd=CCLG, res_en_msg=processing completed, card_name=신한카드, mcht_taxno=1138521083, res_green_deposit_mny=0, res_tax_mny=90, app_no=27886734}', 'happyin022002@gmail.com', '2022-11-15 17:44:30', 'happyin022002@gmail.com', '2022-11-15 17:44:30');

		insert into ord_trsctn_info (ord_no, pay_gtwy_tp, trsctn_id_tp, trsctn_proc_tp, trsctn_id, trsctn_rslt_cd, trsctn_rslt_msg, cre_usr_id, cre_dt, upd_usr_id, upd_dt)
		values ('192211151341424534', 'PG02', 'P01', 'T02', '22569980339961', null, '주문 취소 요청', 'happyin022002@gmail.com', '2022-11-15 17:44:30', 'happyin022002@gmail.com', '2022-11-15 17:44:30');
	</insert>

</mapper>
