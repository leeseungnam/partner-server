<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.wrightbrothers.apps.product.query.Product">
	
	<select id="isNonInspectionReject" parameterType="kr.wrightbrothers.apps.product.dto.ProductDeleteDto" resultType="boolean">
		select
			if(count(prdt_cd) > 0, true, false) as isNonInspectionReject
		  from prdt_sell_info
		 where prdt_stus_cd != 'S10'
		<foreach collection="productCodeList" item="item" index="index" open="and prdt_cd in (" separator="," close=")">
			#{item}
		</foreach>
	</select>
	
	<select id="isProductInspection" parameterType="java.lang.String" resultType="boolean">
		select
		    if(count(prdt_cd) = 0, false, true) as isProductInspection
		  from prdt_sell_info
		 where prdt_cd = #{productCode}
		   and prdt_stus_cd in ('S06', 'S09', 'S10')
	</select>
	
	<select id="isProductCode" parameterType="java.lang.String" resultType="boolean">
		select
		    if(count(prdt_cd) = 0, false, true) as isProductCode
		  from prdt_main
		 where prdt_cd = #{productCode}
	</select>
	
	<select id="isProductAuth" parameterType="kr.wrightbrothers.apps.product.dto.ProductAuthDto" resultType="boolean">
		select
			if(count(prdt_cd) = 0, true, false) as isProductAuth
		  from prdt_main
		 where pur_rq_no = #{partnerCode}
		   and prdt_cd = #{productCode}
	</select>

	<select id="findProductCountByPartnerCode" parameterType="java.lang.String" resultType="Integer">
		select
			count(prdt_cd) as productCount
		from prdt_main
		where pur_rq_no = #{partnerCode}
	</select>

	<select id="findProductGroupCode" parameterType="java.lang.String" resultType="java.lang.String">
		select
		    prdt_grp_cd
		  from com_cagy
		 where cagy_cd = #{categoryCode}
	</select>

	<select id="findProductStatus" parameterType="java.lang.String" resultType="java.lang.String">
		select
		    prdt_stus_cd as product_status_code
		  from prdt_sell_info
		 where prdt_cd = #{productCode}
	</select>

	<select id="findProductDisplayFlag" parameterType="java.lang.String" resultType="java.lang.String">
		select
		    dp_flg as display_flag
		  from prdt_sell_info
		 where prdt_cd = #{productCode}
	</select>

	<select id="findProductList" parameterType="kr.wrightbrothers.apps.product.dto.ProductListDto$Param" resultType="kr.wrightbrothers.apps.product.dto.ProductListDto$Response">
		select
		    p.prdt_cd product_code,
		    ifnull(p.brd_nm, cb.brd_eng_nm) brand_name,
		    co.cagy_nm category_one_name,
		    ct.cagy_nm category_two_name,
		    cr.cagy_nm category_thr_name,
		    p.prdt_nm product_name,
		    ps.prdt_stus_cd product_status_code,
		    ps.prdt_stus_cd product_status_name,
			ps.dp_flg display_flag,
		    if(ps.dp_flg = 'Y', '노출', '미노출') display_name,
		    ps.invty_qty product_stock_qty,
		    ps.fnl_sell_amt final_sell_amount,
			ps.prdt_optn_flg product_option_flag,
			p.cre_dt create_date,
			p.upd_dt update_date,
			p.cre_usr_id create_user_id,
			'' as create_user_name
		  from prdt_main p
		 inner join prdt_sell_info ps
			on p.prdt_cd = ps.prdt_cd
		  left join com_cagy co
		    on p.cagy_dpth_one = co.cagy_cd
		  left join com_cagy ct
			on p.cagy_dpth_two = ct.cagy_cd
		  left join com_cagy cr
			on p.cagy_dpth_thr = cr.cagy_cd
		  left join com_brd cb
		  	on p.brd_no = cb.brd_no
		 where p.pur_rq_no = #{partnerCode}
		<choose>
		   <when test="keywordValueList != null and keywordValueList.length != 0">
			   <choose>
				   <when test="keywordType == 'NAME'.toString()">
					   <foreach collection="keywordValueList" item="item" index="index" open="and (" separator="OR" close=")">
						   p.prdt_nm like concat(trim(#{item}), '%')
					   </foreach>
				   </when>
				   <when test="keywordType == 'CODE'.toString()">
					   <foreach collection="keywordValueList" item="item" index="index" open="and (" separator="OR" close=")">
						   p.prdt_cd like concat(trim(#{item}), '%')
					   </foreach>
				   </when>
			   </choose>
		   </when>
		   <otherwise>
			   <choose>
				   <when test="rangeType == 'PRODUCT'.toString()">
					   and p.cre_dt between concat(#{startDay}, ' 00:00:00.0') and concat(#{endDay}, ' 23:59:59.9')
				   </when>
				   <when test="rangeType == 'SALE'.toString()">
					   and ps.prdt_sell_st_dt between concat(#{startDay}, ' 00:00:00.0') and concat(#{endDay}, ' 23:59:59.9')
				   </when>
			   </choose>
			   -- 전시상태
			   <foreach collection="displayFlag" item="item" index="index" open="and ps.dp_flg in (" separator="," close=")">
				   #{item}
			   </foreach>
			   -- 상품상태
			   <foreach collection="status" item="item" index="index" open="and ps.prdt_stus_cd in (" separator="," close=")">
				   #{item}
			   </foreach>
		   </otherwise>
		</choose>
		<choose>
			<when test="sortType == 'CRE'.toString()">
		order by p.cre_dt desc
			</when>
			<when test="sortType == 'UPD'.toString()">
		order by p.upd_dt desc
			</when>
			<when test="sortType == 'LSAMT'.toString()">
		order by ps.fnl_sell_amt
			</when>
			<when test="sortType == 'HSAMT'.toString()">
		order by ps.fnl_sell_amt desc
			</when>
		</choose>
	</select>

	<select id="findProductCreateUser" parameterType="java.lang.String" resultType="java.lang.String">
		select
		    user_name
		  from users
		 where user_id = #{createUserId}
	</select>

	<insert id="insertProduct" parameterType="kr.wrightbrothers.apps.product.dto.ProductDto$ReqBody">
		insert into prdt_main(prdt_cd,
		                      pur_rq_no,
		                      prdt_tp,
		                      cagy_dpth_one,
		                      cagy_dpth_two,
		                      cagy_dpth_thr,
		                      prdt_nm,
		                      brd_no,
		                      brd_nm,
		                      mdl_no,
		                      mdl_nm,
		                      mdl_year,
		                      ytb_url,
		                      prdt_barcd,
		                      prdt_file_no,
		                      cre_usr_id,
		                      upd_usr_id)
		values(#{productCode},
			   #{partnerCode},
			   #{productType},
			   #{categoryOneCode},
			   #{categoryTwoCode},
			   #{categoryThrCode},
			   #{productName},
			   #{brandNo},
			   #{brandName},
			   #{modelCode},
			   #{modelName},
			   #{modelYear},
			   #{youtubeUrl},
			   #{productBarcode},
			   #{productFileNo},
			   #{userId},
			   #{userId});
		insert into prdt_sell_chnl(prdt_cd,
		                           prdt_sell_chnl_cd,
		                           cre_usr_id,
		                           upd_usr_id)
		values(#{productCode},
		       '1',
		       #{userId},
		       #{userId});
	</insert>

	<update id="updateProduct" parameterType="kr.wrightbrothers.apps.product.dto.ProductDto$ReqBody">
		update prdt_main
		   set cagy_dpth_one = #{categoryOneCode},
			   cagy_dpth_two = #{categoryTwoCode},
			   cagy_dpth_thr = #{categoryThrCode},
			   prdt_nm = #{productName},
			   brd_no = #{brandNo},
			   brd_nm = #{brandName},
			   mdl_no = #{modelCode},
			   mdl_nm = #{modelName},
			   mdl_year = #{modelYear},
			   ytb_url = #{youtubeUrl},
			   prdt_barcd = #{productBarcode},
			   prdt_file_no = #{productFileNo},
			   upd_usr_id = #{userId},
			   upd_dt = now()
	     where prdt_cd = #{productCode}
	</update>

	<insert id="mergeBasicSpec" parameterType="kr.wrightbrothers.apps.product.dto.BasicSpecDto$ReqBody">
		insert into prdt_bsc_spec(prdt_cd,
		                          sles_cagy_cd,
		                          dti_tp_cd,
		                          fram_mtrl_cd,
		                          fram_sz_cd,
		                          brk_tp_cd,
		                          ppse_thm_cd,
		                          we_sz_cd,
		                          ssps_tp_cd,
		                          minim_hgt_pn,
		                          maxum_hgt_pn,
		                          bike_tare,
		                          cre_usr_id,
		                          upd_usr_id)
		values(#{productCode},
			   #{salesCategoryCode},
			   #{drivetrainTypeCode},
			   #{frameMaterialCode},
			   #{frameSizeCode},
			   #{brakeTypeCode},
			   #{purposeThemeCode},
			   #{wheelSizeCode},
			   #{suspensionTypeCode},
			   #{minHeightPerson},
			   #{maxHeightPerson},
			   #{bikeWeight},
			   #{userId},
			   #{userId})
		on duplicate key
		update
			sles_cagy_cd = #{salesCategoryCode},
			dti_tp_cd = #{drivetrainTypeCode},
			fram_mtrl_cd = #{frameMaterialCode},
			fram_sz_cd = #{frameSizeCode},
			brk_tp_cd = #{brakeTypeCode},
			ppse_thm_cd = #{purposeThemeCode},
			we_sz_cd = #{wheelSizeCode},
			ssps_tp_cd = #{suspensionTypeCode},
			minim_hgt_pn = #{minHeightPerson},
			maxum_hgt_pn = #{maxHeightPerson},
			bike_tare = #{bikeWeight},
		    upd_usr_id = #{userId},
		    upd_dt = now()
	</insert>

	<insert id="insertBasicSpecAge" parameterType="kr.wrightbrothers.apps.product.dto.BasicSpecDto$ReqBody">
		insert into prdt_emrk_age(prdt_cd,
		                          emrk_age,
		                          cre_usr_id,
		                          upd_usr_id)
		values
		<foreach collection="ageList" item="item" index="index" separator=",">
			(#{productCode}, #{item}, #{userId}, #{userId})
		</foreach>
	</insert>

	<delete id="deleteBasicSpecAge" parameterType="java.lang.String">
		delete
		  from prdt_emrk_age
		 where prdt_cd = #{productCode}
	</delete>

	<insert id="mergeSellInfo" parameterType="kr.wrightbrothers.apps.product.dto.SellInfoDto$ReqBody">
		insert into prdt_sell_info(prdt_cd,
		                           prdt_amt,
		                           dscnt_flg,
		                           dscnt_tp,
		                           dscnt_amt,
		                           pur_amt,
		                           fnl_sell_amt,
		                           dp_flg,
		                           prdt_optn_flg,
		                           prdt_stus_cd,
		                           invty_qty,
		                           prdt_sell_st_dt,
		                           cre_usr_id,
		                           upd_usr_id)
		values(#{productCode},
			   #{productAmount},
			   #{discountFlag},
			   #{discountType},
			   #{discountAmount},
		       ifnull(#{supplyAmount}, 0),	-- 판매정보 공금금액 없을경우 0원 입력 협의(운영 유기민)
			   #{finalSellAmount},
		       #{displayFlag},
		       #{productOptionFlag},
			   #{productStatusCode},
			   #{productStockQty},
		       #{productSellStartDate},
			   #{userId},
			   #{userId})
		on duplicate key
		update
			prdt_amt		= #{productAmount},
			dscnt_flg		= #{discountFlag},
			dscnt_tp		= #{discountType},
			dscnt_amt		= #{discountAmount},
			pur_amt			= #{supplyAmount},
			fnl_sell_amt	= #{finalSellAmount},
			<if test="productStatusCode == 'S01'.toString()">
				prdt_sell_st_dt = ifnull(prdt_sell_st_dt, now()),
			</if>
			dp_flg			= #{displayFlag},
			prdt_optn_flg	= #{productOptionFlag},
			prdt_stus_cd	= #{productStatusCode},
			invty_qty		= #{productStockQty},
			upd_usr_id		= #{userId},
		    upd_dt			= now()
	</insert>

	<update id="updateProductSellDate" parameterType="kr.wrightbrothers.apps.product.dto.SellInfoDto$ReqBody">
		update prdt_sell_info
		   set prdt_sell_st_dt = ifnull(#{productSellStartDate}, prdt_sell_st_dt),
		       prdt_sell_ed_dt = ifnull(#{productSellEndDate}, prdt_sell_ed_dt)
		where prdt_cd = #{productCode}
	</update>

	<insert id="insertOption" parameterType="kr.wrightbrothers.apps.product.dto.OptionDto$ReqBody">
		insert into prdt_optn(prdt_cd,
		                      optn_seq,
		                      optn_nm,
		                      optn_val,
		                      optn_schg,
		                      invty_qty,
		                      cre_usr_id,
		                      upd_usr_id)
		values(#{productCode},
			   #{optionSeq},
			   #{optionName},
			   #{optionValue},
			   #{optionSurcharge},
			   #{optionStockQty},
			   #{userId},
			   #{userId})
	</insert>

	<delete id="deleteOption" parameterType="java.lang.String">
		delete
		  from prdt_optn
		 where prdt_cd = #{productCode}
	</delete>

	<insert id="insertDelivery" parameterType="kr.wrightbrothers.apps.product.dto.DeliveryDto$ReqBody">
		<if test="deliveryType != 'D05'.toString()">
		insert into prdt_dlvr_dtl(prdt_cd,
								  prdt_dlvr_cd,
								  dlvr_bun_flg,
								  chg_tp,
								  chg_base,
								  tms_free_cd,
								  tms_free_chg,
								  pay_tp,
								  surchg_flg,
								  area_cd,
								  schg_jeju,
								  schg_iso,
								  unstr_zip_cd,
								  unstr_addr,
								  unstr_addr_dtl,
								  rtn_zip_cd,
								  rtn_addr,
								  rtn_addr_dtl,
								  excng_chg,
								  rtn_chg,
								  rtn_dlvr_cmpny_cd,
								  cre_usr_id)
		values(#{productCode},
			   #{deliveryType},
			   #{deliveryBundleFlag},
			   #{chargeType},
			   #{chargeBase},
			   #{termsFreeCode},
			   #{termsFreeCharge},
			   #{paymentType},
			   #{surchargeFlag},
			   #{areaCode},
			   #{surchargeJejudo},
			   #{surchargeIsolated},
			   #{unstoringZipCode},
			   #{unstoringAddress},
			   #{unstoringAddressDetail},
			   #{returnZipCode},
			   #{returnAddress},
			   #{returnAddressDetail},
			   #{exchangeCharge},
			   #{returnCharge},
			   #{returnDeliveryCompanyCode},
			   #{userId});
		</if>
		insert into prdt_dlvr(prdt_cd,
							  prdt_dlvr_cd,
							  cre_usr_id)
		values(#{productCode},
			   #{deliveryType},
			   #{userId});
	</insert>

	<insert id="updateDelivery" parameterType="kr.wrightbrothers.apps.product.dto.DeliveryDto$ReqBody">
		<if test="deliveryType != 'D05'.toString()">
		update prdt_dlvr_dtl
		   set prdt_dlvr_cd		= #{deliveryType},
		       dlvr_bun_flg		= #{deliveryBundleFlag},
			   chg_tp			= #{chargeType},
			   chg_base			= #{chargeBase},
			   tms_free_cd		= #{termsFreeCode},
			   tms_free_chg		= #{termsFreeCharge},
			   pay_tp			= #{paymentType},
			   surchg_flg		= #{surchargeFlag},
			   area_cd			= #{areaCode},
			   schg_jeju		= #{surchargeJejudo},
			   schg_iso			= #{surchargeIsolated},
			   unstr_zip_cd		= #{unstoringZipCode},
			   unstr_addr		= #{unstoringAddress},
			   unstr_addr_dtl	= #{unstoringAddressDetail},
			   rtn_zip_cd		= #{returnZipCode},
			   rtn_addr			= #{returnAddress},
			   rtn_addr_dtl		= #{returnAddressDetail},
		       excng_chg		= #{exchangeCharge},
			   rtn_chg			= #{returnCharge},
			   rtn_dlvr_cmpny_cd= #{returnDeliveryCompanyCode}
		 where prdt_cd = #{productCode};
		</if>
		update prdt_dlvr
		   set prdt_dlvr_cd = #{deliveryType}
		 where prdt_cd = #{productCode};
	</insert>

	<insert id="mergeInfoNotice" parameterType="kr.wrightbrothers.apps.product.dto.InfoNoticeDto$ReqBody">
		insert into prdt_info_bltn(prdt_cd,
		                           cagy_cd,
		                           prdt_atte1,
								   prdt_atte2,
								   prdt_atte3,
								   prdt_atte4,
								   prdt_atte5,
								   prdt_atte6,
								   prdt_atte7,
								   prdt_atte8,
								   prdt_atte9,
								   prdt_atte10,
								   prdt_atte11,
		                           prdt_atte12,
		                           cre_usr_id,
		                           upd_usr_id)
		values(#{productCode},
			   #{categoryCode},
			   #{productAttribute1},
			   #{productAttribute2},
			   #{productAttribute3},
			   #{productAttribute4},
			   #{productAttribute5},
			   #{productAttribute6},
			   #{productAttribute7},
			   #{productAttribute8},
			   #{productAttribute9},
			   #{productAttribute10},
			   #{productAttribute11},
		       #{productAttribute12},
			   #{userId},
			   #{userId})
		on duplicate key
		update
			cagy_cd			= #{categoryCode},
			prdt_atte1		= #{productAttribute1},
			prdt_atte2		= #{productAttribute2},
			prdt_atte3		= #{productAttribute3},
			prdt_atte4		= #{productAttribute4},
			prdt_atte5		= #{productAttribute5},
			prdt_atte6		= #{productAttribute6},
			prdt_atte7		= #{productAttribute7},
			prdt_atte8		= #{productAttribute8},
			prdt_atte9		= #{productAttribute9},
			prdt_atte10		= #{productAttribute10},
			prdt_atte11		= #{productAttribute11},
			prdt_atte12		= #{productAttribute12},
		    upd_usr_id		= #{userId},
		    upd_dt			= now()
	</insert>

	<insert id="mergeGuide" parameterType="kr.wrightbrothers.apps.product.dto.GuideDto$ReqBody">
		insert into prdt_gud_ctnt(prdt_cd,
		                          prdt_gud_cmt_two,
		                          prdt_gud_cmt_one,
		                          prdt_gud_cmt_four,
		                          excng_chg_gud,
		                          as_gud,
		                          prdt_gud_cmt_thr,
		                          cre_usr_id,
		                          upd_usr_id)
		values(#{productCode},
			   #{productGuide},
		       #{productDescription},
			   #{deliveryGuide},
			   #{exchangeReturnGuide},
			   #{asGuide},
		       #{qnaGuide},
			   #{userId},
			   #{userId})
		on duplicate key
		update
			prdt_gud_cmt_two	= #{productGuide},
			prdt_gud_cmt_one	= #{productDescription},
			prdt_gud_cmt_four	= #{deliveryGuide},
			excng_chg_gud		= #{exchangeReturnGuide},
			as_gud				= #{asGuide},
			prdt_gud_cmt_thr	= #{qnaGuide},
		    upd_usr_id			= #{userId},
		    upd_dt				= now()
	</insert>

	<select id="findProduct" parameterType="java.lang.String" resultType="kr.wrightbrothers.apps.product.dto.ProductDto$ResBody">
		select
		    p.prdt_cd product_code,
			p.prdt_tp product_type,
			p.cagy_dpth_one category_one_code,
			co.cagy_nm category_one_name,
            p.cagy_dpth_two category_two_code,
            ct.cagy_nm category_two_name,
            p.cagy_dpth_thr category_thr_code,
            cr.cagy_nm category_thr_name,
            p.prdt_nm product_name,
            p.brd_no brand_no,
            ifnull(p.brd_nm, cb.brd_eng_nm) brand_name,
            p.mdl_no model_code,
            ifnull(p.mdl_nm, cm.mdl_nm) model_name,
            p.mdl_year model_year,
            p.ytb_url youtube_url,
            p.prdt_barcd product_barcode,
            p.prdt_file_no product_file_no,
		    p.rntl_flg
		  from prdt_main p
		  left join prdt_gud_ctnt g
		    on p.prdt_cd = g.prdt_cd
		  left join com_cagy co
		  	on p.cagy_dpth_one = co.cagy_cd
		  left join com_cagy ct
			on p.cagy_dpth_two = ct.cagy_cd
		  left join com_cagy cr
			on p.cagy_dpth_thr = cr.cagy_cd
		  left join com_brd cb
		    on p.brd_no = cb.brd_no
		  left join com_brd_mdl cm
		  	on p.mdl_no = cm.mdl_cd
		 where p.prdt_cd = #{productCode}
	</select>

	<select id="findBasicSpec" parameterType="java.lang.String" resultMap="findBasicSpecMap">
		select
			bs.sles_cagy_cd sales_category_code,
			bs.dti_tp_cd drivetrain_type_code,
			bs.fram_mtrl_cd frame_material_code,
            bs.fram_sz_cd frame_size_code,
            bs.brk_tp_cd brake_type_code,
            bs.ppse_thm_cd purpose_theme_code,
            bs.we_sz_cd wheel_size_code,
            bs.ssps_tp_cd suspension_type_code,
            bs.minim_hgt_pn min_height_person,
            bs.maxum_hgt_pn max_height_person,
            bs.bike_tare bike_weight,
            ea.emrk_age embark_age
		  from prdt_bsc_spec bs
		  left join prdt_emrk_age ea
			on bs.prdt_cd = ea.prdt_cd
		 where bs.prdt_cd = #{productCode}
	</select>
	
	<resultMap id="findBasicSpecMap" type="kr.wrightbrothers.apps.product.dto.BasicSpecDto$ResBody">
		<result column="sales_category_code" property="salesCategoryCode"/>
		<result column="drivetrain_type_code" property="drivetrainTypeCode"/>
		<result column="frame_material_code" property="frameMaterialCode"/>
		<result column="frame_size_code" property="frameSizeCode"/>
		<result column="brake_type_code" property="brakeTypeCode"/>
		<result column="purpose_theme_code" property="purposeThemeCode"/>
		<result column="wheel_size_code" property="wheelSizeCode"/>
		<result column="suspension_type_code" property="suspensionTypeCode"/>
		<result column="min_height_person" property="minHeightPerson"/>
		<result column="max_height_person" property="maxHeightPerson"/>
		<result column="bike_weight" property="bikeWeight"/>
		<collection property="ageList" ofType="java.lang.String">
			<result column="embark_age"/>
		</collection>
	</resultMap>

	<select id="findSellInfo" parameterType="java.lang.String" resultType="kr.wrightbrothers.apps.product.dto.SellInfoDto$ResBody">
		select
			prdt_amt product_amount,
			dscnt_flg discount_flag,
			dscnt_tp discount_type,
            dscnt_amt discount_amount,
            dp_flg display_flag,
            ifnull(prdt_optn_flg, 'N') product_option_flag,
            pur_amt supply_amount,
            fnl_sell_amt final_sell_amount,
            prdt_stus_cd product_status_code,
            invty_qty product_stock_qty,
            prdt_sell_st_dt product_sell_start_date,
            prdt_sell_ed_dt product_sell_end_date
		  from prdt_sell_info
		 where prdt_cd = #{productCode}
	</select>

	<select id="findOptionList" parameterType="java.lang.String" resultType="kr.wrightbrothers.apps.product.dto.OptionDto$ResBody">
		select
			optn_seq option_seq,
			optn_nm option_name,
			optn_val option_value,
            optn_schg option_surcharge,
            invty_qty option_stock_qty
		  from prdt_optn
		 where prdt_cd = #{productCode}
	</select>

	<select id="findRental" parameterType="java.lang.String" resultType="kr.wrightbrothers.apps.product.dto.RentalDto$ResBody">
		select
			twlv_bse_amt,
			twfo_bse_amt,
			thsi_bse_amt,
			foei_bse_amt,
			twlv_mon_amt,
			twfo_mon_amt,
			thsi_mon_amt,
			foei_mon_amt,
			twlv_rtn_flg,
			twfo_rtn_flg,
			thsi_rtn_flg,
			foei_rtn_flg
		from prdt_rntl
		where prdt_cd = #{productCode}
	</select>

	<select id="findDelivery" parameterType="java.lang.String" resultType="kr.wrightbrothers.apps.product.dto.DeliveryDto$ResBody">
		select
			prdt_dlvr_cd delivery_type,
            dlvr_bun_flg delivery_bundle_flag,
            chg_tp charge_type,
            chg_base charge_base,
            tms_free_cd term_free_code,
            tms_free_chg terms_free_charge,
            pay_tp payment_type,
            surchg_flg surcharge_flag,
            area_cd area_code,
            schg_jeju surcharge_jejudo,
            schg_iso surcharge_isolated,
            unstr_zip_cd unstoring_zip_code,
            unstr_addr unstoring_address,
            unstr_addr_dtl unstoring_address_detail,
            rtn_zip_cd return_zip_code,
            rtn_addr return_address,
            rtn_addr_dtl return_address_detail,
            excng_chg exchange_charge,
            rtn_chg return_charge,
            rtn_dlvr_cmpny_cd return_delivery_company_code
		  from prdt_dlvr_dtl
		 where prdt_cd = #{productCode}
	</select>

	<select id="findInfoNotice" parameterType="java.lang.String" resultType="kr.wrightbrothers.apps.product.dto.InfoNoticeDto$ResBody">
		select
			cagy_cd category_code,
			prdt_atte1 product_attribute1,
			prdt_atte2 product_attribute2,
            prdt_atte3 product_attribute3,
            prdt_atte4 product_attribute4,
            prdt_atte5 product_attribute5,
            prdt_atte6 product_attribute6,
            prdt_atte7 product_attribute7,
            prdt_atte8 product_attribute8,
            prdt_atte9 product_attribute9,
            prdt_atte10 product_attribute10,
            prdt_atte11 product_attribute11,
			prdt_atte12 product_attribute12
		  from prdt_info_bltn
		 where prdt_cd = #{productCode}
	</select>

	<select id="findGuide" parameterType="java.lang.String" resultType="kr.wrightbrothers.apps.product.dto.GuideDto$ResBody">
		select
		    prdt_gud_cmt_one productDescription,
			prdt_gud_cmt_two product_guide,
			prdt_gud_cmt_four delivery_guide,
			excng_chg_gud exchange_return_guide,
            as_gud as_guide,
            prdt_gud_cmt_thr qna_guide
		  from prdt_gud_ctnt
		 where prdt_cd = #{productCode}
	</select>

	<update id="bulkUpdateProductDisplay" parameterType="kr.wrightbrothers.apps.product.dto.StatusUpdateDto">
		<if test="productCodeList.length != 0">
		update prdt_sell_info
		   set dp_flg	  = #{statusValue},
		       upd_usr_id = #{userId},
		       upd_dt	  = now()
		 where 1 = 1
			<foreach collection="productCodeList" item="item" index="index" open="and prdt_cd in (" separator="," close=")">
				#{item}
			</foreach>
		</if>
	</update>

	<update id="bulkUpdateProductStatus" parameterType="kr.wrightbrothers.apps.product.dto.StatusUpdateDto">
		<if test="productCodeList.length != 0">
		update prdt_sell_info
		   set prdt_stus_cd = #{statusValue},
		       <if test="statusValue == 'S08'">
			   prdt_sell_ed_dt	= ifnull(prdt_sell_ed_dt, now()),
			   dp_flg = 'N',
			   </if>
		       upd_usr_id	= #{userId},
		       upd_dt		= now()
		 where 1 = 1
			<foreach collection="productCodeList" item="item" index="index" open="and prdt_cd in (" separator="," close=")">
				#{item}
			</foreach>
		</if>
	</update>
	
	<select id="findProductRejectReason" parameterType="java.lang.String" resultType="java.lang.String">
		select
		    product_log
		  from product_change_info
		 where product_code = #{productCode}
		   and product_log_code = 'L04'
		 order by create_date desc
		 limit 1
	</select>

	<select id="isZeroStock" parameterType="java.lang.String" resultType="boolean">
		select
			if(invty_qty = 0, true, false) as isZeroStock
		  from prdt_sell_info
		 where prdt_cd = #{productCode}
	</select>
	
	<select id="findExcelProductList" parameterType="java.util.List" resultType="kr.wrightbrothers.apps.product.dto.ProductExcelDto">
		select
		    count(*) over (partition by p.prdt_cd) as optionCount,
		    p.prdt_cd product_code,
		    p.brd_nm brand_name,
		    co.cagy_nm category_one_name,
		    ct.cagy_nm category_two_name,
			cr.cagy_nm category_thr_name,
			p.prdt_nm product_name,
			if(s.prdt_optn_flg = 'Y', concat(o.optn_nm, '-', o.optn_val), '') as product_option,
			if(s.prdt_optn_flg = 'Y', o.invty_qty, s.invty_qty) as product_stock_qty,
			if(s.prdt_optn_flg = 'Y', s.fnl_sell_amt + o.optn_schg, s.fnl_sell_amt) as final_sell_amount,
			s.prdt_stus_cd product_status_code,
			if(s.dp_flg = 'Y', '노출', '미노출') as display_flag,
			d.prdt_dlvr_cd delivery_type,
			d.dlvr_bun_flg delivery_bundle_flag,
			ifnull(date_format(s.prdt_sell_st_dt, '%Y-%m-%d'), '') as product_sell_start_day,
			ifnull(date_format(s.prdt_sell_ed_dt, '%Y-%m-%d'), '') as product_sell_end_day,
			ifnull(date_format(p.cre_dt, '%Y-%m-%d'), '') as create_day,
			ifnull(date_format(p.upd_dt, '%Y-%m-%d'), '') as update_day,
			p.cre_usr_id create_user_name
		  from prdt_main p
		 inner join prdt_sell_info s
			on p.prdt_cd = s.prdt_cd
		  left join prdt_optn o
			on p.prdt_cd = o.prdt_cd
		  left join prdt_dlvr_dtl d
			on p.prdt_cd = d.prdt_cd
		  left join com_cagy co
		  	on p.cagy_dpth_one = co.cagy_cd
		  left join com_cagy ct
			on p.cagy_dpth_two = ct.cagy_cd
		  left join com_cagy cr
			on p.cagy_dpth_thr = cr.cagy_cd
		 where p.prdt_cd in
		<foreach collection="list" item="item" index="index" open="(" separator="," close=")">
			#{item}
		</foreach>
		 order by p.cre_dt desc
	</select>

	<select id="isSellStartDate" parameterType="java.lang.String" resultType="boolean">
		select
		    if(dp_flg = 'Y' and prdt_stus_cd = 'S01' and prdt_sell_st_dt is null, false, true) as isSellStartDate
		  from prdt_sell_info
		 where prdt_cd = #{productCode}
	</select>

	<delete id="deleteProduct" parameterType="java.lang.String">
		delete
		  from prdt_main
		 where prdt_cd = #{productCode}
	</delete>
	<delete id="deleteSellInfo" parameterType="java.lang.String">
		delete
		  from prdt_sell_info
		 where prdt_cd = #{productCode};

		delete
		  from prdt_sell_chnl
		 where prdt_cd = #{productCode};
	</delete>
	<delete id="deleteInfoNotice" parameterType="java.lang.String">
		delete
		  from prdt_info_bltn
		 where prdt_cd = #{productCode}
	</delete>
	<delete id="deleteGuide" parameterType="java.lang.String">
		delete
		  from prdt_gud_ctnt
		 where prdt_cd = #{productCode}
	</delete>
	<delete id="deleteBasicSpec" parameterType="java.lang.String">
		delete
		  from prdt_bsc_spec
		 where prdt_cd = #{productCode};
		delete
		  from prdt_emrk_age
		 where prdt_cd = #{productCode};
		delete
		  from prdt_fram_spec_info
		 where prdt_cd = #{productCode}
	</delete>
	<delete id="deleteDelivery" parameterType="java.lang.String">
		delete
		  from prdt_dlvr_dtl
		 where prdt_cd = #{productCode};
		delete
		  from prdt_dlvr
		 where prdt_cd = #{productCode}
	</delete>
	<delete id="deleteProductRequest" parameterType="java.lang.String">
		delete
		  from prdt_req
		 where prdt_cd = #{productCode}
	</delete>
	<delete id="deleteProductRequestHistory" parameterType="java.lang.String">
		delete
		  from prdt_req_his
		 where prdt_cd = #{productCode}
	</delete>

	<update id="updatePrdtList" parameterType="kr.wrightbrothers.apps.product.dto.ProductListViewDto">
		update prdt_list set
			 prdt_tp = #{prdtTp},
			 prdt_list_tp = #{prdtListTp},
			 cagy_dpth_one = #{cagyDpthOne},
			 cagy_dpth_two = #{cagyDpthTwo},
			 cagy_dpth_thr = #{cagyDpthThr},
			 prdt_nm = #{prdtNm},
			 brd_no = #{brdNo},
			 mdl_no = #{mdlNo},
			 mdl_year = #{mdlYear},
			 prdt_stus_cd = #{prdtStusCd},
			 prdt_file_no = #{prdtFileNo},
			 file_src = #{fileSrc},
			 dp_flg = #{dpFlg},
			 rntl_flg = #{rntlFlg},
			 fram_mtrl_cd = #{framMtrlCd},
			 fram_sz_cd = #{framSzCd},
			 dti_tp_cd = #{dtiTpCd},
			 minim_hgt_pn = #{minimHgtPn},
			 maxum_hgt_pn = #{maxumHgtPn},
			 thsi_bse_amt = #{thsiBseAmt},
			 thsi_mon_amt = #{thsiMonAmt},
			 prdt_sell_chnl_cd = #{prdtSellChnlCd},
			 prdt_amt = #{prdtAmt},
			 fnl_sell_amt = #{fnlSellAmt},
			 dscnt_flg = #{dscntFlg},
			 dscnt_tp = #{dscntTp},
			 dscnt_amt = #{dscntAmt},
			 invty_qty = #{invtyQty},
			 prdt_sale_stus = #{prdtSaleStus},
			 prdt_sz = #{prdtSz},
			 fosl_use = #{foslUse},
			 upd_usr_id = #{usrId},
			 upd_dt = current_timestamp
		where prdt_cd = #{prdtCd}
	</update>

	<update id="updateProductRental" parameterType="kr.wrightbrothers.apps.product.dto.RentalDto$ReqBody">
		update prdt_rntl
		set twlv_bse_amt = #{twlvBseAmt},
			twfo_bse_amt = #{twfoBseAmt},
			thsi_bse_amt = #{thsiBseAmt},
			foei_bse_amt = #{foeiBseAmt},
			twlv_mon_amt = #{twfoMonAmt},
			twfo_mon_amt = #{twfoMonAmt},
			thsi_mon_amt = #{thsiMonAmt},
			foei_mon_amt = #{foeiMonAmt},
			upd_usr_id = #{userId},
			upd_dt = current_timestamp
		where prdt_cd = #{productCode}
	</update>

</mapper>
