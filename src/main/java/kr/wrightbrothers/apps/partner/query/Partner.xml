<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.wrightbrothers.apps.partner.query.Partner">
	<delete id="deletePartnerOperator" parameterType="kr.wrightbrothers.apps.partner.dto.PartnerInviteDto$Param">
		delete from users_partner where partner_code = #{partnerCode} and user_id = #{inviteReceiver} and auth_code = #{authCode}
	</delete>

	<update id="updateInviteStatus" parameterType="kr.wrightbrothers.apps.partner.dto.PartnerInviteDto$Param">
		update partner_invite set
		    invite_status = #{inviteStatus}
		where invite_code = #{inviteCode}
	</update>

	<update id="updatePartnerThumbnail" parameterType="kr.wrightbrothers.apps.partner.dto.PartnerDto$ReqBody">
		update partner set
			thumbnail = #{thumbnail}
		where partner_code = #{partnerCode}
	</update>

	<select id="findOperatorInvite" parameterType="kr.wrightbrothers.apps.partner.dto.PartnerInviteDto$Param" resultType="kr.wrightbrothers.apps.partner.dto.PartnerInviteDto$ResBody">
		select invite_code
			 ,  partner_code
			 ,  auth_code
			 ,  invite_status
			 ,  invite_receiver
			 ,  invite_receiver_name
			 ,  invite_sender
		from partner_invite
		where invite_code = #{inviteCode}
		  and invite_receiver = #{inviteReceiver}
		order by create_date desc
         limit 1
	</select>

	<select id="checkPartnerAuth" parameterType="kr.wrightbrothers.apps.partner.dto.PartnerAuthDto" resultType="boolean">
		select if(count(up.partner_code) = 0, false, true) as isPartnerAuth
		from users_partner up
		join partner p
		  on up.partner_code = p.partner_code
		where up.user_id = #{userId}
		and up.auth_code = #{authCode}
		and up.partner_code = #{partnerCode}
	</select>

	<select id="checkPartnerOperatorAuthCount" parameterType="kr.wrightbrothers.apps.partner.dto.PartnerInviteDto$PartnerOperator" resultType="boolean">
		select if(count(partner_code) = 3, false, true) as isPartnerOperatorCount
		from users_partner
		where auth_code = #{authCode}
		  and partner_code = #{partnerCode}
	</select>

	<select id="checkPartnerOperatorCount" parameterType="kr.wrightbrothers.apps.partner.dto.PartnerInviteDto$Param" resultType="boolean">
		select if(count(user_id) = 0, true, false) as isPartnerOperatorCount
		from users_partner
		where auth_code = #{authCode}
		  and partner_code = #{partnerCode}
		  and user_id = #{inviteReceiver}
	</select>

	<select id="checkNotAcceptInviteCount" parameterType="kr.wrightbrothers.apps.partner.dto.PartnerInviteDto$ReqBody" resultType="boolean">
		select if(count(invite_code) = 0, true, false) as isPartnerInviteCount
		from partner_invite
		where partner_code = #{partnerCode}
		  and invite_receiver = #{inviteReceiver}
		  and invite_status = 0
	</select>

	<select id="checkPartnerNameCount" parameterType="java.lang.String" resultType="boolean">
		select if(count(partner_code) = 0, true, false) as isPartnerName
		from partner
		where partner_name = #{partnerName}
	</select>

	<delete id="deletePartnerNotification" parameterType="java.lang.String">
		delete from partner_notification where partner_code = #{partnerCode}
	</delete>

	<insert id="insertPartnerNotification" parameterType="kr.wrightbrothers.apps.partner.dto.PartnerUpdateDto$Param$Notification">
		insert into partner_notification
		    (partner_code, notification_phone, create_user_id) values
		<foreach collection="notificationPhoneList" item="notificationPhone" index="index" separator=",">
			(#{partnerCode}, #{notificationPhone}, #{userId})
		</foreach>
	</insert>


	<update id="updatePartner" parameterType="kr.wrightbrothers.apps.partner.dto.PartnerDto$ReqBody">
		update partner set
			partner_name = #{partnerName}
		,	partner_status = #{partnerStatus}
	 	,	partner_kind = #{partnerKind}
		,	business_classification_code = #{businessClassificationCode}
		,	business_name = #{businessName}
		,	business_no = #{businessNo}
		,	business_condition = #{businessCondition}
		,	business_type = #{businessType}
		,	rep_name = #{repName}
		,	rep_phone = #{repPhone}
		,	cs_phone = #{csPhone}
		,	business_address = #{businessAddress}
		,	business_address_sub = #{businessAddressSub}
		,	business_address_zip_code = #{businessAddressZipCode}
		,	update_user_id = #{userId}
		,	update_date = current_timestamp
		where partner_code = #{partnerCode}
	</update>

	<update id="updatePartnerContractOperator" parameterType="kr.wrightbrothers.apps.partner.dto.PartnerUpdateDto$Param$Contract">
		update partner_contract set
		    contract_manager_name = #{contractManagerName}
		,	contract_manager_phone = #{contractManagerPhone}
			where partner_code = #{partnerCode}
			and contract_code = #{contractCode}
	</update>

	<update id="updatePartnerContractDay" parameterType="kr.wrightbrothers.apps.partner.dto.PartnerUpdateDto$Param$Contract">
		update partner_contract setfindPartnerContractSNS
			contract_day = #{contractDay}
		  ,	contract_start_day = #{contractStartDay}
		  ,	contract_end_day = #{contractEndDay}
		where partner_code = #{partnerCode}
		  and contract_code = #{contractCode}
	</update>

	<update id="updatePartnerContract" parameterType="kr.wrightbrothers.apps.partner.dto.PartnerUpdateDto$Param$Contract">
		update partner_contract set
			contract_manager_name = #{contractManagerName}
		  ,	contract_manager_phone = #{contractManagerPhone}
		  ,	account_no = #{accountNo}
		  ,	account_holder = #{accountHolder}
		  ,	bank_code = #{bankCode}
		  ,	tax_bill_email = #{taxBillEmail}
		  ,	contract_status = #{contractStatus}
		  ,	contract_file_no = #{contractFileNo}
		where partner_code = #{partnerCode}
		  and contract_code = #{contractCode}
	</update>

	<select id="findPartnerNotificationByPartnerCode" parameterType="java.lang.String" resultType="kr.wrightbrothers.apps.partner.dto.PartnerNotificationDto$ResBody">
		select pn.notification_phone
		from partner_notification pn
		where pn.partner_code = #{partnerCode}
	</select>

	<select id="findPartnerRejectByPartnerCode" parameterType="kr.wrightbrothers.apps.partner.dto.PartnerViewDto$Param" resultType="kr.wrightbrothers.apps.partner.dto.PartnerRejectDto$ResBody">
		select pr.contract_status
			,  pr.reject_comment
			,  pr.create_date
		from partner_reject pr
		where pr.partner_code = #{partnerCode}
		  and pr.contract_code = #{contractCode}
		order by create_date desc
	</select>

	<insert id="insertPartnerReject" parameterType="kr.wrightbrothers.apps.partner.dto.PartnerRejectDto$Param">
		insert into partner_reject
		    (
		     partner_code
		     , contract_code
		     , contract_status
		     , reject_comment
		     , create_user_id
		     )
		     VALUES
			(
			 #{partnerCode}
			, #{contractCode}
			, #{contractStatus}
			, #{rejectComment}
			, #{userId}
			)
	</insert>

	<select id="findPartnerSNS" parameterType="java.lang.String" resultType="kr.wrightbrothers.apps.partner.dto.PartnerSNSDto">
		select p.partner_code
			 , p.partner_name
			 , p.thumbnail
			 , p.partner_kind
			 , p.business_classification_code
			 , p.business_name
			 , p.business_no
			 , p.business_condition
			 , p.business_type
			 , p.rep_name
			 , p.rep_phone
			 , p.cs_phone
			 , p.business_address
			 , p.business_address_sub
			 , p.business_address_zip_code
			 , p.partner_status
		from partner p
		where p.partner_code = #{partnerCode}
	</select>
	<select id="findPartnerContractSNS" parameterType="java.lang.String" resultType="kr.wrightbrothers.apps.partner.dto.PartnerContractSNSDto">
		select pc.partner_code
			 , pc.contract_code
			 , pc.contract_status
			 , pc.contract_manager_name
			 , pc.contract_manager_phone
			 , pc.tax_bill_email
			 , pc.bank_code
			 , pc.account_no
			 , pc.account_holder
			 , pc.contract_day
			 , pc.contract_start_day
			 , pc.contract_end_day
			 , pc.contract_file_no
		from partner_contract pc
		where pc.partner_code = #{partnerCode}
	</select>

	<select id="findPartnerByPartnerCode" parameterType="java.lang.String" resultType="kr.wrightbrothers.apps.partner.dto.PartnerDto$ResBody">
		select p.partner_code
			 , p.partner_name
			 , p.thumbnail
			 , p.partner_status
			 , p.partner_kind
			 , p.business_classification_code
			 , p.business_name
			 , p.business_no
			 , p.business_condition
			 , p.business_type
			 , p.rep_name
			 , p.rep_phone
			 , p.cs_phone
			 , p.business_address
			 , p.business_address_sub
			 , p.business_address_zip_code
		from partner p
		where p.partner_code = #{partnerCode}
	</select>

	<select id="findPartnerContractByPartnerCode" parameterType="kr.wrightbrothers.apps.partner.dto.PartnerViewDto$Param" resultType="kr.wrightbrothers.apps.partner.dto.PartnerContractDto$ResBody">
		select pc.partner_code
			 , pc.contract_code
			 , pc.contract_status
			 , pc.contract_manager_name
			 , pc.contract_manager_phone
			 , pc.tax_bill_email
			 , pc.bank_code
			 , pc.account_no
			 , pc.account_holder
			 , pc.contract_day
			 , pc.contract_start_day
			 , pc.contract_end_day
			 , pc.contract_file_no
		from partner_contract pc
	   where pc.partner_code = #{partnerCode}
		and pc.contract_code = #{contractCode}
	</select>

	<select id="findPartnerListByBusinessNo" parameterType="kr.wrightbrothers.apps.partner.dto.PartnerFindDto$Param" resultType="kr.wrightbrothers.apps.partner.dto.PartnerDto$ResBody">
		select partner_code
			,  partner_status
			,  partner_name
			,  partner_kind
			,  business_classification_code
			,  business_name
			,  business_no
		  from partner
		 where business_no = #{businessNo}
		   <if test="businessClassificationCode != null and businessClassificationCode != ''">
		   and business_classification_code = #{businessClassificationCode}
		   </if>
	</select>

	<select id="findUserAuthAndPartnerListByUserId" parameterType="kr.wrightbrothers.apps.partner.dto.PartnerAndAuthFindDto$Param" resultType="kr.wrightbrothers.apps.partner.dto.PartnerAndAuthFindDto$ResBody">
		<![CDATA[
		select p.partner_name
			 ,  p.partner_kind
			 ,  up.partner_code
			 ,  p.partner_status
			 ,  up.auth_code
			 ,	pc.contract_code
     		 ,	pc.contract_status
			 , '' as comment
			 , '' as display_status_name
			 , '' as auth_code_name
		from users_partner up
	    inner join partner p
		   on p.partner_code = up.partner_code
		inner join partner_contract pc
		   on pc.partner_code = up.partner_code
		where up.user_id = #{userId}
		order by (CASE WHEN ASCII(SUBSTRING(p.partner_name,1)) < 123 THEN 2 ELSE 1 END)
		, p.partner_name
		]]>
	</select>

	<insert id="insertPartner" parameterType="kr.wrightbrothers.apps.partner.dto.PartnerDto$ReqBody">
		insert into partner
		    (
		     partner_code
		    , partner_name
		    , partner_status
		    , partner_kind
		    , business_classification_code
		    , business_name
		    , business_no
		    , business_condition
		    , business_type
		    , rep_name
		    , rep_phone
		    , cs_phone
		    , business_address
		    , business_address_sub
			, business_address_zip_code
		    , create_user_id
		    , update_user_id
		    )
		values
			(
			 #{partnerCode}
			, #{partnerName}
			, #{partnerStatus}
			, #{partnerKind}
			, #{businessClassificationCode}
			, #{businessName}
			, #{businessNo}
			, #{businessCondition}
			, #{businessType}
			, #{repName}
			, #{repPhone}
			, #{csPhone}
			, #{businessAddress}
			, #{businessAddressSub}
			, #{businessAddressZipCode}
			, #{userId}
			, #{userId}
			)
	</insert>

	<insert id="insertPartnerContract" parameterType="kr.wrightbrothers.apps.partner.dto.PartnerContractDto$ReqBody">
		insert into partner_contract
		    (
		     partner_code
		     , contract_code
		     , contract_status
		     , contract_manager_name
		     , contract_manager_phone
		     , tax_bill_email
		     , bank_code
		     , account_no
		     , account_holder
		     , contract_day
		     , contract_start_day
		     , contract_end_day
		     , contract_file_no
		     , create_user_id
		     , update_user_id
		     )
		values
			(
			#{partnerCode}
			, #{contractCode}
			, #{contractStatus}
			, #{contractManagerName}
			, #{contractManagerPhone}
			, #{taxBillEmail}
			, #{bankCode}
			, #{accountNo}
			, #{accountHolder}
			, #{contractDay}
			, #{contractStartDay}
			, #{contractEndDay}
			, #{contractFileNo}
			, #{userId}
			, #{userId}
			)
	</insert>

	<insert id="insertPartnerOperator" parameterType="kr.wrightbrothers.apps.partner.dto.PartnerInviteDto$ReqBody">
		insert into partner_invite
		    (invite_code
		    , partner_code
		    , auth_code
		    , invite_status
		    , invite_receiver
			, invite_receiver_name
		    , invite_sender
		    , create_user_id
		    )
		VALUES
			(
			 #{inviteCode}
			, #{partnerCode}
			, #{authCode}
			, #{inviteStatus}
			, #{inviteReceiver}
			, #{inviteReceiverName}
			, #{userId}
			, #{userId}
			)
	</insert>
</mapper>
