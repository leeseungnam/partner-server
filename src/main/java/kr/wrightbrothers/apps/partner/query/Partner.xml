<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.wrightbrothers.apps.partner.query.Partner">

	<delete id="deleteParterNotification" parameterType="java.lang.String">
		delete from partner_notification where partner_code = #{partnerCode}
	</delete>

	<insert id="insertParterNotification" parameterType="kr.wrightbrothers.apps.partner.dto.PartnerUpdateDto$Param$Notification">
		insert into partner_notification
		    (partner_code, notification_phone, create_user_id) values
		<foreach collection="notificationPhoneList" item="notificationPhone" index="index" separator=",">
			(#{partnerCode}, #{notificationPhone}, #{userId})
		</foreach>
	</insert>

	<update id="updateParterContract" parameterType="kr.wrightbrothers.apps.partner.dto.PartnerUpdateDto$Param$Contract">
		update partner_contract set
		    contract_manager_name = #{contractManagerName}
		,	contract_manager_phone = #{contractManagerPhone}
			where partner_code = #{partnerCode}

	</update>

	<select id="findPartnerNotificationByPartnerCode" parameterType="java.lang.String" resultType="kr.wrightbrothers.apps.partner.dto.PartnerNotificationDto$ResBody">
		select pn.notification_phone
		from partner_notification pn
		where pn.partner_code = #{partnerCode}
	</select>

	<select id="findPartnerByPartnerCode" parameterType="java.lang.String" resultType="kr.wrightbrothers.apps.partner.dto.PartnerDto$ResBody">
		select p.partner_code
			 , p.partner_name
			 , p.thumbnail
			 , p.partner_status
			 , p.partner_kind
			 , p.business_classification_code
			 , p.business_name
			 , p.business_no
			 , p.business_condition
			 , p.business_type
			 , p.rep_name
			 , p.rep_phone
			 , p.cs_phone
			 , p.business_address
			 , p.business_address_sub
			 , p.business_address_zip_code
		from partner p
		inner join partner_contract pc
		on p.partner_code = pc.partner_code
		where p.partner_code = #{partnerCode}
	</select>

	<select id="findPartnerContractByPartnerCode" parameterType="java.lang.String" resultType="kr.wrightbrothers.apps.partner.dto.PartnerContractDto$ResBody">
		select pc.partner_code
			 , pc.contract_no
			 , pc.contract_status
			 , pc.contract_manager_name
			 , pc.contract_manager_phone
			 , pc.tax_bill_email
			 , pc.bank_code
			 , pc.account_no
			 , pc.account_holder
			 , pc.contract_day
			 , pc.contract_start_day
			 , pc.contract_end_day
			 , pc.contract_file_no
		from partner_contract pc
	   where pc.partner_code = #{partnerCode}
		order by pc.contract_day desc
		limit 1
	</select>

	<select id="findPartnerListByBusinessNo" parameterType="kr.wrightbrothers.apps.partner.dto.PartnerFindDto$Param" resultType="kr.wrightbrothers.apps.partner.dto.PartnerDto$ResBody">
		select partner_code
			,  partner_status
			,  partner_name
			,  partner_kind
			,  business_classification_code
			,  business_name
			,  business_no
		  from partner
		 where business_no = #{businessNo}
		   <if test="businessClassificationCode != null and businessClassificationCode != ''">
		   and business_classification_code = #{businessClassificationCode}
		   </if>
	</select>

	<select id="findUserAuthAndPartnerListByUserId" parameterType="kr.wrightbrothers.apps.partner.dto.PartnerAndAuthFindDto$Param" resultType="kr.wrightbrothers.apps.partner.dto.PartnerAndAuthFindDto$ResBody">
		select up.partner_code
			 ,  up.auth_code
			 ,  p.partner_name
			 ,  p.partner_kind
			 ,  p.partner_status
			 ,  pc.contract_status
			 , '' as comment
			 , '' as partner_status_name
			 , '' as contract_status_name
		from users_partner up
				 inner join partner p
							on p.partner_code = up.partner_code
				 inner join partner_contract pc
							on p.partner_code = pc.partner_code
		where up.user_id = #{userId}
	</select>

	<insert id="insertPartner" parameterType="kr.wrightbrothers.apps.partner.dto.PartnerDto$ReqBody">
		insert into partner
		    (
		     partner_code
		    , partner_name
		    , partner_status
		    , partner_kind
		    , business_classification_code
		    , business_name
		    , business_no
		    , business_condition
		    , business_type
		    , rep_name
		    , rep_phone
		    , cs_phone
		    , business_address
		    , business_address_sub
			, business_address_zip_code
		    , create_user_id
		    , update_user_id
		    )
		values
			(
			 #{partnerCode}
			, #{partnerName}
			, #{partnerStatus}
			, #{partnerKind}
			, #{businessClassificationCode}
			, #{businessName}
			, #{businessNo}
			, #{businessCondition}
			, #{businessType}
			, #{repName}
			, #{repPhone}
			, #{csPhone}
			, #{businessAddress}
			, #{businessAddressSub}
			, #{businessAddressZipCode}
			, #{userId}
			, #{userId}
			)
	</insert>

	<insert id="insertPartnerContract" parameterType="kr.wrightbrothers.apps.partner.dto.PartnerContractDto$ReqBody">
		insert into partner_contract
		    (
		     partner_code
		     , contract_no
		     , contract_status
		     , contract_manager_name
		     , contract_manager_phone
		     , tax_bill_email
		     , bank_code
		     , account_no
		     , account_holder
		     , contract_day
		     , contract_start_day
		     , contract_end_day
		     , contract_file_no
		     , create_user_id
		     , update_user_id
		     )
		values
			(
			#{partnerCode}
			, #{contractNo}
			, #{contractStatus}
			, #{contractManagerName}
			, #{contractManagerPhone}
			, #{taxBillEmail}
			, #{bankCode}
			, #{accountNo}
			, #{accountHolder}
			, #{contractDay}
			, #{contractStartDay}
			, #{contractEndDay}
			, #{contractFileNo}
			, #{userId}
			, #{userId}
			)
	</insert>
</mapper>
